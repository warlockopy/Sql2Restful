package scopeProto;

//Generated by the protocol buffer compiler.  DO NOT EDIT!
//source: BatteryCrankProto.proto

public final class BatteryCrankProto {
private BatteryCrankProto() {}
public static void registerAllExtensions(
   com.google.protobuf.ExtensionRegistry registry) {
}
public interface BatteryCrankOrBuilder extends
   // @@protoc_insertion_point(interface_extends:BatteryCrank)
   com.google.protobuf.MessageOrBuilder {

 /**
  * <code>required .EventHeader header = 1;</code>
  */
 boolean hasHeader();
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 EventHeaderProto.EventHeader getHeader();
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 EventHeaderProto.EventHeaderOrBuilder getHeaderOrBuilder();

 /**
  * <code>optional float voltage_average_before_crank = 2;</code>
  *
  * <pre>
  * Voltage average before crank (V). Precision: 0.01
  * </pre>
  */
 boolean hasVoltageAverageBeforeCrank();
 /**
  * <code>optional float voltage_average_before_crank = 2;</code>
  *
  * <pre>
  * Voltage average before crank (V). Precision: 0.01
  * </pre>
  */
 float getVoltageAverageBeforeCrank();

 /**
  * <code>optional float voltage_minimum = 3;</code>
  *
  * <pre>
  * Voltage minimum (V). Precision: 0.01
  * </pre>
  */
 boolean hasVoltageMinimum();
 /**
  * <code>optional float voltage_minimum = 3;</code>
  *
  * <pre>
  * Voltage minimum (V). Precision: 0.01
  * </pre>
  */
 float getVoltageMinimum();

 /**
  * <code>optional uint32 voltage_minimum_duration_milliseconds = 4;</code>
  *
  * <pre>
  * Voltage minimum duration (ms). Precision: 10
  * </pre>
  */
 boolean hasVoltageMinimumDurationMilliseconds();
 /**
  * <code>optional uint32 voltage_minimum_duration_milliseconds = 4;</code>
  *
  * <pre>
  * Voltage minimum duration (ms). Precision: 10
  * </pre>
  */
 int getVoltageMinimumDurationMilliseconds();

 /**
  * <code>optional float voltage_crank_average = 5;</code>
  *
  * <pre>
  * Voltage crank average (V). Precision: 0.01
  * </pre>
  */
 boolean hasVoltageCrankAverage();
 /**
  * <code>optional float voltage_crank_average = 5;</code>
  *
  * <pre>
  * Voltage crank average (V). Precision: 0.01
  * </pre>
  */
 float getVoltageCrankAverage();

 /**
  * <code>optional uint32 voltage_crank_average_duration_milliseconds = 6;</code>
  *
  * <pre>
  * Voltage crank average duration (ms). Precision: 10
  * </pre>
  */
 boolean hasVoltageCrankAverageDurationMilliseconds();
 /**
  * <code>optional uint32 voltage_crank_average_duration_milliseconds = 6;</code>
  *
  * <pre>
  * Voltage crank average duration (ms). Precision: 10
  * </pre>
  */
 int getVoltageCrankAverageDurationMilliseconds();

 /**
  * <code>optional float voltage_post_crank = 7;</code>
  *
  * <pre>
  * Voltage post crank (V). Precision: 0.01
  * </pre>
  */
 boolean hasVoltagePostCrank();
 /**
  * <code>optional float voltage_post_crank = 7;</code>
  *
  * <pre>
  * Voltage post crank (V). Precision: 0.01
  * </pre>
  */
 float getVoltagePostCrank();

 /**
  * <code>optional sint32 temperature = 8;</code>
  *
  * <pre>
  * Temperature (in degrees Celsius). Precision: 1
  * </pre>
  */
 boolean hasTemperature();
 /**
  * <code>optional sint32 temperature = 8;</code>
  *
  * <pre>
  * Temperature (in degrees Celsius). Precision: 1
  * </pre>
  */
 int getTemperature();
}
/**
* Protobuf type {@code BatteryCrank}
*
* <pre>
* Battery Crank event
* </pre>
*/
public static final class BatteryCrank extends
   com.google.protobuf.GeneratedMessage implements
   // @@protoc_insertion_point(message_implements:BatteryCrank)
   BatteryCrankOrBuilder {
 // Use BatteryCrank.newBuilder() to construct.
 private BatteryCrank(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
   super(builder);
   this.unknownFields = builder.getUnknownFields();
 }
 private BatteryCrank(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

 private static final BatteryCrank defaultInstance;
 public static BatteryCrank getDefaultInstance() {
   return defaultInstance;
 }

 public BatteryCrank getDefaultInstanceForType() {
   return defaultInstance;
 }

 private final com.google.protobuf.UnknownFieldSet unknownFields;
 @java.lang.Override
 public final com.google.protobuf.UnknownFieldSet
     getUnknownFields() {
   return this.unknownFields;
 }
 private BatteryCrank(
     com.google.protobuf.CodedInputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   initFields();
   int mutable_bitField0_ = 0;
   com.google.protobuf.UnknownFieldSet.Builder unknownFields =
       com.google.protobuf.UnknownFieldSet.newBuilder();
   try {
     boolean done = false;
     while (!done) {
       int tag = input.readTag();
       switch (tag) {
         case 0:
           done = true;
           break;
         default: {
           if (!parseUnknownField(input, unknownFields,
                                  extensionRegistry, tag)) {
             done = true;
           }
           break;
         }
         case 10: {
           EventHeaderProto.EventHeader.Builder subBuilder = null;
           if (((bitField0_ & 0x00000001) == 0x00000001)) {
             subBuilder = header_.toBuilder();
           }
           header_ = input.readMessage(EventHeaderProto.EventHeader.PARSER, extensionRegistry);
           if (subBuilder != null) {
             subBuilder.mergeFrom(header_);
             header_ = subBuilder.buildPartial();
           }
           bitField0_ |= 0x00000001;
           break;
         }
         case 21: {
           bitField0_ |= 0x00000002;
           voltageAverageBeforeCrank_ = input.readFloat();
           break;
         }
         case 29: {
           bitField0_ |= 0x00000004;
           voltageMinimum_ = input.readFloat();
           break;
         }
         case 32: {
           bitField0_ |= 0x00000008;
           voltageMinimumDurationMilliseconds_ = input.readUInt32();
           break;
         }
         case 45: {
           bitField0_ |= 0x00000010;
           voltageCrankAverage_ = input.readFloat();
           break;
         }
         case 48: {
           bitField0_ |= 0x00000020;
           voltageCrankAverageDurationMilliseconds_ = input.readUInt32();
           break;
         }
         case 61: {
           bitField0_ |= 0x00000040;
           voltagePostCrank_ = input.readFloat();
           break;
         }
         case 64: {
           bitField0_ |= 0x00000080;
           temperature_ = input.readSInt32();
           break;
         }
       }
     }
   } catch (com.google.protobuf.InvalidProtocolBufferException e) {
     throw e.setUnfinishedMessage(this);
   } catch (java.io.IOException e) {
     throw new com.google.protobuf.InvalidProtocolBufferException(
         e.getMessage()).setUnfinishedMessage(this);
   } finally {
     this.unknownFields = unknownFields.build();
     makeExtensionsImmutable();
   }
 }
 public static final com.google.protobuf.Descriptors.Descriptor
     getDescriptor() {
   return BatteryCrankProto.internal_static_BatteryCrank_descriptor;
 }

 protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
     internalGetFieldAccessorTable() {
   return BatteryCrankProto.internal_static_BatteryCrank_fieldAccessorTable
       .ensureFieldAccessorsInitialized(
           BatteryCrankProto.BatteryCrank.class, BatteryCrankProto.BatteryCrank.Builder.class);
 }

 public static com.google.protobuf.Parser<BatteryCrank> PARSER =
     new com.google.protobuf.AbstractParser<BatteryCrank>() {
   public BatteryCrank parsePartialFrom(
       com.google.protobuf.CodedInputStream input,
       com.google.protobuf.ExtensionRegistryLite extensionRegistry)
       throws com.google.protobuf.InvalidProtocolBufferException {
     return new BatteryCrank(input, extensionRegistry);
   }
 };

 @java.lang.Override
 public com.google.protobuf.Parser<BatteryCrank> getParserForType() {
   return PARSER;
 }

 private int bitField0_;
 public static final int HEADER_FIELD_NUMBER = 1;
 private EventHeaderProto.EventHeader header_;
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 public boolean hasHeader() {
   return ((bitField0_ & 0x00000001) == 0x00000001);
 }
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 public EventHeaderProto.EventHeader getHeader() {
   return header_;
 }
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 public EventHeaderProto.EventHeaderOrBuilder getHeaderOrBuilder() {
   return header_;
 }

 public static final int VOLTAGE_AVERAGE_BEFORE_CRANK_FIELD_NUMBER = 2;
 private float voltageAverageBeforeCrank_;
 /**
  * <code>optional float voltage_average_before_crank = 2;</code>
  *
  * <pre>
  * Voltage average before crank (V). Precision: 0.01
  * </pre>
  */
 public boolean hasVoltageAverageBeforeCrank() {
   return ((bitField0_ & 0x00000002) == 0x00000002);
 }
 /**
  * <code>optional float voltage_average_before_crank = 2;</code>
  *
  * <pre>
  * Voltage average before crank (V). Precision: 0.01
  * </pre>
  */
 public float getVoltageAverageBeforeCrank() {
   return voltageAverageBeforeCrank_;
 }

 public static final int VOLTAGE_MINIMUM_FIELD_NUMBER = 3;
 private float voltageMinimum_;
 /**
  * <code>optional float voltage_minimum = 3;</code>
  *
  * <pre>
  * Voltage minimum (V). Precision: 0.01
  * </pre>
  */
 public boolean hasVoltageMinimum() {
   return ((bitField0_ & 0x00000004) == 0x00000004);
 }
 /**
  * <code>optional float voltage_minimum = 3;</code>
  *
  * <pre>
  * Voltage minimum (V). Precision: 0.01
  * </pre>
  */
 public float getVoltageMinimum() {
   return voltageMinimum_;
 }

 public static final int VOLTAGE_MINIMUM_DURATION_MILLISECONDS_FIELD_NUMBER = 4;
 private int voltageMinimumDurationMilliseconds_;
 /**
  * <code>optional uint32 voltage_minimum_duration_milliseconds = 4;</code>
  *
  * <pre>
  * Voltage minimum duration (ms). Precision: 10
  * </pre>
  */
 public boolean hasVoltageMinimumDurationMilliseconds() {
   return ((bitField0_ & 0x00000008) == 0x00000008);
 }
 /**
  * <code>optional uint32 voltage_minimum_duration_milliseconds = 4;</code>
  *
  * <pre>
  * Voltage minimum duration (ms). Precision: 10
  * </pre>
  */
 public int getVoltageMinimumDurationMilliseconds() {
   return voltageMinimumDurationMilliseconds_;
 }

 public static final int VOLTAGE_CRANK_AVERAGE_FIELD_NUMBER = 5;
 private float voltageCrankAverage_;
 /**
  * <code>optional float voltage_crank_average = 5;</code>
  *
  * <pre>
  * Voltage crank average (V). Precision: 0.01
  * </pre>
  */
 public boolean hasVoltageCrankAverage() {
   return ((bitField0_ & 0x00000010) == 0x00000010);
 }
 /**
  * <code>optional float voltage_crank_average = 5;</code>
  *
  * <pre>
  * Voltage crank average (V). Precision: 0.01
  * </pre>
  */
 public float getVoltageCrankAverage() {
   return voltageCrankAverage_;
 }

 public static final int VOLTAGE_CRANK_AVERAGE_DURATION_MILLISECONDS_FIELD_NUMBER = 6;
 private int voltageCrankAverageDurationMilliseconds_;
 /**
  * <code>optional uint32 voltage_crank_average_duration_milliseconds = 6;</code>
  *
  * <pre>
  * Voltage crank average duration (ms). Precision: 10
  * </pre>
  */
 public boolean hasVoltageCrankAverageDurationMilliseconds() {
   return ((bitField0_ & 0x00000020) == 0x00000020);
 }
 /**
  * <code>optional uint32 voltage_crank_average_duration_milliseconds = 6;</code>
  *
  * <pre>
  * Voltage crank average duration (ms). Precision: 10
  * </pre>
  */
 public int getVoltageCrankAverageDurationMilliseconds() {
   return voltageCrankAverageDurationMilliseconds_;
 }

 public static final int VOLTAGE_POST_CRANK_FIELD_NUMBER = 7;
 private float voltagePostCrank_;
 /**
  * <code>optional float voltage_post_crank = 7;</code>
  *
  * <pre>
  * Voltage post crank (V). Precision: 0.01
  * </pre>
  */
 public boolean hasVoltagePostCrank() {
   return ((bitField0_ & 0x00000040) == 0x00000040);
 }
 /**
  * <code>optional float voltage_post_crank = 7;</code>
  *
  * <pre>
  * Voltage post crank (V). Precision: 0.01
  * </pre>
  */
 public float getVoltagePostCrank() {
   return voltagePostCrank_;
 }

 public static final int TEMPERATURE_FIELD_NUMBER = 8;
 private int temperature_;
 /**
  * <code>optional sint32 temperature = 8;</code>
  *
  * <pre>
  * Temperature (in degrees Celsius). Precision: 1
  * </pre>
  */
 public boolean hasTemperature() {
   return ((bitField0_ & 0x00000080) == 0x00000080);
 }
 /**
  * <code>optional sint32 temperature = 8;</code>
  *
  * <pre>
  * Temperature (in degrees Celsius). Precision: 1
  * </pre>
  */
 public int getTemperature() {
   return temperature_;
 }

 private void initFields() {
   header_ = EventHeaderProto.EventHeader.getDefaultInstance();
   voltageAverageBeforeCrank_ = 0F;
   voltageMinimum_ = 0F;
   voltageMinimumDurationMilliseconds_ = 0;
   voltageCrankAverage_ = 0F;
   voltageCrankAverageDurationMilliseconds_ = 0;
   voltagePostCrank_ = 0F;
   temperature_ = 0;
 }
 private byte memoizedIsInitialized = -1;
 public final boolean isInitialized() {
   byte isInitialized = memoizedIsInitialized;
   if (isInitialized == 1) return true;
   if (isInitialized == 0) return false;

   if (!hasHeader()) {
     memoizedIsInitialized = 0;
     return false;
   }
   if (!getHeader().isInitialized()) {
     memoizedIsInitialized = 0;
     return false;
   }
   memoizedIsInitialized = 1;
   return true;
 }

 public void writeTo(com.google.protobuf.CodedOutputStream output)
                     throws java.io.IOException {
   getSerializedSize();
   if (((bitField0_ & 0x00000001) == 0x00000001)) {
     output.writeMessage(1, header_);
   }
   if (((bitField0_ & 0x00000002) == 0x00000002)) {
     output.writeFloat(2, voltageAverageBeforeCrank_);
   }
   if (((bitField0_ & 0x00000004) == 0x00000004)) {
     output.writeFloat(3, voltageMinimum_);
   }
   if (((bitField0_ & 0x00000008) == 0x00000008)) {
     output.writeUInt32(4, voltageMinimumDurationMilliseconds_);
   }
   if (((bitField0_ & 0x00000010) == 0x00000010)) {
     output.writeFloat(5, voltageCrankAverage_);
   }
   if (((bitField0_ & 0x00000020) == 0x00000020)) {
     output.writeUInt32(6, voltageCrankAverageDurationMilliseconds_);
   }
   if (((bitField0_ & 0x00000040) == 0x00000040)) {
     output.writeFloat(7, voltagePostCrank_);
   }
   if (((bitField0_ & 0x00000080) == 0x00000080)) {
     output.writeSInt32(8, temperature_);
   }
   getUnknownFields().writeTo(output);
 }

 private int memoizedSerializedSize = -1;
 public int getSerializedSize() {
   int size = memoizedSerializedSize;
   if (size != -1) return size;

   size = 0;
   if (((bitField0_ & 0x00000001) == 0x00000001)) {
     size += com.google.protobuf.CodedOutputStream
       .computeMessageSize(1, header_);
   }
   if (((bitField0_ & 0x00000002) == 0x00000002)) {
     size += com.google.protobuf.CodedOutputStream
       .computeFloatSize(2, voltageAverageBeforeCrank_);
   }
   if (((bitField0_ & 0x00000004) == 0x00000004)) {
     size += com.google.protobuf.CodedOutputStream
       .computeFloatSize(3, voltageMinimum_);
   }
   if (((bitField0_ & 0x00000008) == 0x00000008)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(4, voltageMinimumDurationMilliseconds_);
   }
   if (((bitField0_ & 0x00000010) == 0x00000010)) {
     size += com.google.protobuf.CodedOutputStream
       .computeFloatSize(5, voltageCrankAverage_);
   }
   if (((bitField0_ & 0x00000020) == 0x00000020)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(6, voltageCrankAverageDurationMilliseconds_);
   }
   if (((bitField0_ & 0x00000040) == 0x00000040)) {
     size += com.google.protobuf.CodedOutputStream
       .computeFloatSize(7, voltagePostCrank_);
   }
   if (((bitField0_ & 0x00000080) == 0x00000080)) {
     size += com.google.protobuf.CodedOutputStream
       .computeSInt32Size(8, temperature_);
   }
   size += getUnknownFields().getSerializedSize();
   memoizedSerializedSize = size;
   return size;
 }

 private static final long serialVersionUID = 0L;
 @java.lang.Override
 protected java.lang.Object writeReplace()
     throws java.io.ObjectStreamException {
   return super.writeReplace();
 }

 public static BatteryCrankProto.BatteryCrank parseFrom(
     com.google.protobuf.ByteString data)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data);
 }
 public static BatteryCrankProto.BatteryCrank parseFrom(
     com.google.protobuf.ByteString data,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data, extensionRegistry);
 }
 public static BatteryCrankProto.BatteryCrank parseFrom(byte[] data)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data);
 }
 public static BatteryCrankProto.BatteryCrank parseFrom(
     byte[] data,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data, extensionRegistry);
 }
 public static BatteryCrankProto.BatteryCrank parseFrom(java.io.InputStream input)
     throws java.io.IOException {
   return PARSER.parseFrom(input);
 }
 public static BatteryCrankProto.BatteryCrank parseFrom(
     java.io.InputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseFrom(input, extensionRegistry);
 }
 public static BatteryCrankProto.BatteryCrank parseDelimitedFrom(java.io.InputStream input)
     throws java.io.IOException {
   return PARSER.parseDelimitedFrom(input);
 }
 public static BatteryCrankProto.BatteryCrank parseDelimitedFrom(
     java.io.InputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseDelimitedFrom(input, extensionRegistry);
 }
 public static BatteryCrankProto.BatteryCrank parseFrom(
     com.google.protobuf.CodedInputStream input)
     throws java.io.IOException {
   return PARSER.parseFrom(input);
 }
 public static BatteryCrankProto.BatteryCrank parseFrom(
     com.google.protobuf.CodedInputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseFrom(input, extensionRegistry);
 }

 public static Builder newBuilder() { return Builder.create(); }
 public Builder newBuilderForType() { return newBuilder(); }
 public static Builder newBuilder(BatteryCrankProto.BatteryCrank prototype) {
   return newBuilder().mergeFrom(prototype);
 }
 public Builder toBuilder() { return newBuilder(this); }

 @java.lang.Override
 protected Builder newBuilderForType(
     com.google.protobuf.GeneratedMessage.BuilderParent parent) {
   Builder builder = new Builder(parent);
   return builder;
 }
 /**
  * Protobuf type {@code BatteryCrank}
  *
  * <pre>
  * Battery Crank event
  * </pre>
  */
 public static final class Builder extends
     com.google.protobuf.GeneratedMessage.Builder<Builder> implements
     // @@protoc_insertion_point(builder_implements:BatteryCrank)
     BatteryCrankProto.BatteryCrankOrBuilder {
   public static final com.google.protobuf.Descriptors.Descriptor
       getDescriptor() {
     return BatteryCrankProto.internal_static_BatteryCrank_descriptor;
   }

   protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
       internalGetFieldAccessorTable() {
     return BatteryCrankProto.internal_static_BatteryCrank_fieldAccessorTable
         .ensureFieldAccessorsInitialized(
             BatteryCrankProto.BatteryCrank.class, BatteryCrankProto.BatteryCrank.Builder.class);
   }

   // Construct using BatteryCrankProto.BatteryCrank.newBuilder()
   private Builder() {
     maybeForceBuilderInitialization();
   }

   private Builder(
       com.google.protobuf.GeneratedMessage.BuilderParent parent) {
     super(parent);
     maybeForceBuilderInitialization();
   }
   private void maybeForceBuilderInitialization() {
     if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
       getHeaderFieldBuilder();
     }
   }
   private static Builder create() {
     return new Builder();
   }

   public Builder clear() {
     super.clear();
     if (headerBuilder_ == null) {
       header_ = EventHeaderProto.EventHeader.getDefaultInstance();
     } else {
       headerBuilder_.clear();
     }
     bitField0_ = (bitField0_ & ~0x00000001);
     voltageAverageBeforeCrank_ = 0F;
     bitField0_ = (bitField0_ & ~0x00000002);
     voltageMinimum_ = 0F;
     bitField0_ = (bitField0_ & ~0x00000004);
     voltageMinimumDurationMilliseconds_ = 0;
     bitField0_ = (bitField0_ & ~0x00000008);
     voltageCrankAverage_ = 0F;
     bitField0_ = (bitField0_ & ~0x00000010);
     voltageCrankAverageDurationMilliseconds_ = 0;
     bitField0_ = (bitField0_ & ~0x00000020);
     voltagePostCrank_ = 0F;
     bitField0_ = (bitField0_ & ~0x00000040);
     temperature_ = 0;
     bitField0_ = (bitField0_ & ~0x00000080);
     return this;
   }

   public Builder clone() {
     return create().mergeFrom(buildPartial());
   }

   public com.google.protobuf.Descriptors.Descriptor
       getDescriptorForType() {
     return BatteryCrankProto.internal_static_BatteryCrank_descriptor;
   }

   public BatteryCrankProto.BatteryCrank getDefaultInstanceForType() {
     return BatteryCrankProto.BatteryCrank.getDefaultInstance();
   }

   public BatteryCrankProto.BatteryCrank build() {
     BatteryCrankProto.BatteryCrank result = buildPartial();
     if (!result.isInitialized()) {
       throw newUninitializedMessageException(result);
     }
     return result;
   }

   public BatteryCrankProto.BatteryCrank buildPartial() {
     BatteryCrankProto.BatteryCrank result = new BatteryCrankProto.BatteryCrank(this);
     int from_bitField0_ = bitField0_;
     int to_bitField0_ = 0;
     if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
       to_bitField0_ |= 0x00000001;
     }
     if (headerBuilder_ == null) {
       result.header_ = header_;
     } else {
       result.header_ = headerBuilder_.build();
     }
     if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
       to_bitField0_ |= 0x00000002;
     }
     result.voltageAverageBeforeCrank_ = voltageAverageBeforeCrank_;
     if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
       to_bitField0_ |= 0x00000004;
     }
     result.voltageMinimum_ = voltageMinimum_;
     if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
       to_bitField0_ |= 0x00000008;
     }
     result.voltageMinimumDurationMilliseconds_ = voltageMinimumDurationMilliseconds_;
     if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
       to_bitField0_ |= 0x00000010;
     }
     result.voltageCrankAverage_ = voltageCrankAverage_;
     if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
       to_bitField0_ |= 0x00000020;
     }
     result.voltageCrankAverageDurationMilliseconds_ = voltageCrankAverageDurationMilliseconds_;
     if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
       to_bitField0_ |= 0x00000040;
     }
     result.voltagePostCrank_ = voltagePostCrank_;
     if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
       to_bitField0_ |= 0x00000080;
     }
     result.temperature_ = temperature_;
     result.bitField0_ = to_bitField0_;
     onBuilt();
     return result;
   }

   public Builder mergeFrom(com.google.protobuf.Message other) {
     if (other instanceof BatteryCrankProto.BatteryCrank) {
       return mergeFrom((BatteryCrankProto.BatteryCrank)other);
     } else {
       super.mergeFrom(other);
       return this;
     }
   }

   public Builder mergeFrom(BatteryCrankProto.BatteryCrank other) {
     if (other == BatteryCrankProto.BatteryCrank.getDefaultInstance()) return this;
     if (other.hasHeader()) {
       mergeHeader(other.getHeader());
     }
     if (other.hasVoltageAverageBeforeCrank()) {
       setVoltageAverageBeforeCrank(other.getVoltageAverageBeforeCrank());
     }
     if (other.hasVoltageMinimum()) {
       setVoltageMinimum(other.getVoltageMinimum());
     }
     if (other.hasVoltageMinimumDurationMilliseconds()) {
       setVoltageMinimumDurationMilliseconds(other.getVoltageMinimumDurationMilliseconds());
     }
     if (other.hasVoltageCrankAverage()) {
       setVoltageCrankAverage(other.getVoltageCrankAverage());
     }
     if (other.hasVoltageCrankAverageDurationMilliseconds()) {
       setVoltageCrankAverageDurationMilliseconds(other.getVoltageCrankAverageDurationMilliseconds());
     }
     if (other.hasVoltagePostCrank()) {
       setVoltagePostCrank(other.getVoltagePostCrank());
     }
     if (other.hasTemperature()) {
       setTemperature(other.getTemperature());
     }
     this.mergeUnknownFields(other.getUnknownFields());
     return this;
   }

   public final boolean isInitialized() {
     if (!hasHeader()) {
       
       return false;
     }
     if (!getHeader().isInitialized()) {
       
       return false;
     }
     return true;
   }

   public Builder mergeFrom(
       com.google.protobuf.CodedInputStream input,
       com.google.protobuf.ExtensionRegistryLite extensionRegistry)
       throws java.io.IOException {
     BatteryCrankProto.BatteryCrank parsedMessage = null;
     try {
       parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
     } catch (com.google.protobuf.InvalidProtocolBufferException e) {
       parsedMessage = (BatteryCrankProto.BatteryCrank) e.getUnfinishedMessage();
       throw e;
     } finally {
       if (parsedMessage != null) {
         mergeFrom(parsedMessage);
       }
     }
     return this;
   }
   private int bitField0_;

   private EventHeaderProto.EventHeader header_ = EventHeaderProto.EventHeader.getDefaultInstance();
   private com.google.protobuf.SingleFieldBuilder<
       EventHeaderProto.EventHeader, EventHeaderProto.EventHeader.Builder, EventHeaderProto.EventHeaderOrBuilder> headerBuilder_;
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public boolean hasHeader() {
     return ((bitField0_ & 0x00000001) == 0x00000001);
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public EventHeaderProto.EventHeader getHeader() {
     if (headerBuilder_ == null) {
       return header_;
     } else {
       return headerBuilder_.getMessage();
     }
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder setHeader(EventHeaderProto.EventHeader value) {
     if (headerBuilder_ == null) {
       if (value == null) {
         throw new NullPointerException();
       }
       header_ = value;
       onChanged();
     } else {
       headerBuilder_.setMessage(value);
     }
     bitField0_ |= 0x00000001;
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder setHeader(
       EventHeaderProto.EventHeader.Builder builderForValue) {
     if (headerBuilder_ == null) {
       header_ = builderForValue.build();
       onChanged();
     } else {
       headerBuilder_.setMessage(builderForValue.build());
     }
     bitField0_ |= 0x00000001;
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder mergeHeader(EventHeaderProto.EventHeader value) {
     if (headerBuilder_ == null) {
       if (((bitField0_ & 0x00000001) == 0x00000001) &&
           header_ != EventHeaderProto.EventHeader.getDefaultInstance()) {
         header_ =
           EventHeaderProto.EventHeader.newBuilder(header_).mergeFrom(value).buildPartial();
       } else {
         header_ = value;
       }
       onChanged();
     } else {
       headerBuilder_.mergeFrom(value);
     }
     bitField0_ |= 0x00000001;
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder clearHeader() {
     if (headerBuilder_ == null) {
       header_ = EventHeaderProto.EventHeader.getDefaultInstance();
       onChanged();
     } else {
       headerBuilder_.clear();
     }
     bitField0_ = (bitField0_ & ~0x00000001);
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public EventHeaderProto.EventHeader.Builder getHeaderBuilder() {
     bitField0_ |= 0x00000001;
     onChanged();
     return getHeaderFieldBuilder().getBuilder();
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public EventHeaderProto.EventHeaderOrBuilder getHeaderOrBuilder() {
     if (headerBuilder_ != null) {
       return headerBuilder_.getMessageOrBuilder();
     } else {
       return header_;
     }
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   private com.google.protobuf.SingleFieldBuilder<
       EventHeaderProto.EventHeader, EventHeaderProto.EventHeader.Builder, EventHeaderProto.EventHeaderOrBuilder> 
       getHeaderFieldBuilder() {
     if (headerBuilder_ == null) {
       headerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
           EventHeaderProto.EventHeader, EventHeaderProto.EventHeader.Builder, EventHeaderProto.EventHeaderOrBuilder>(
               getHeader(),
               getParentForChildren(),
               isClean());
       header_ = null;
     }
     return headerBuilder_;
   }

   private float voltageAverageBeforeCrank_ ;
   /**
    * <code>optional float voltage_average_before_crank = 2;</code>
    *
    * <pre>
    * Voltage average before crank (V). Precision: 0.01
    * </pre>
    */
   public boolean hasVoltageAverageBeforeCrank() {
     return ((bitField0_ & 0x00000002) == 0x00000002);
   }
   /**
    * <code>optional float voltage_average_before_crank = 2;</code>
    *
    * <pre>
    * Voltage average before crank (V). Precision: 0.01
    * </pre>
    */
   public float getVoltageAverageBeforeCrank() {
     return voltageAverageBeforeCrank_;
   }
   /**
    * <code>optional float voltage_average_before_crank = 2;</code>
    *
    * <pre>
    * Voltage average before crank (V). Precision: 0.01
    * </pre>
    */
   public Builder setVoltageAverageBeforeCrank(float value) {
     bitField0_ |= 0x00000002;
     voltageAverageBeforeCrank_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional float voltage_average_before_crank = 2;</code>
    *
    * <pre>
    * Voltage average before crank (V). Precision: 0.01
    * </pre>
    */
   public Builder clearVoltageAverageBeforeCrank() {
     bitField0_ = (bitField0_ & ~0x00000002);
     voltageAverageBeforeCrank_ = 0F;
     onChanged();
     return this;
   }

   private float voltageMinimum_ ;
   /**
    * <code>optional float voltage_minimum = 3;</code>
    *
    * <pre>
    * Voltage minimum (V). Precision: 0.01
    * </pre>
    */
   public boolean hasVoltageMinimum() {
     return ((bitField0_ & 0x00000004) == 0x00000004);
   }
   /**
    * <code>optional float voltage_minimum = 3;</code>
    *
    * <pre>
    * Voltage minimum (V). Precision: 0.01
    * </pre>
    */
   public float getVoltageMinimum() {
     return voltageMinimum_;
   }
   /**
    * <code>optional float voltage_minimum = 3;</code>
    *
    * <pre>
    * Voltage minimum (V). Precision: 0.01
    * </pre>
    */
   public Builder setVoltageMinimum(float value) {
     bitField0_ |= 0x00000004;
     voltageMinimum_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional float voltage_minimum = 3;</code>
    *
    * <pre>
    * Voltage minimum (V). Precision: 0.01
    * </pre>
    */
   public Builder clearVoltageMinimum() {
     bitField0_ = (bitField0_ & ~0x00000004);
     voltageMinimum_ = 0F;
     onChanged();
     return this;
   }

   private int voltageMinimumDurationMilliseconds_ ;
   /**
    * <code>optional uint32 voltage_minimum_duration_milliseconds = 4;</code>
    *
    * <pre>
    * Voltage minimum duration (ms). Precision: 10
    * </pre>
    */
   public boolean hasVoltageMinimumDurationMilliseconds() {
     return ((bitField0_ & 0x00000008) == 0x00000008);
   }
   /**
    * <code>optional uint32 voltage_minimum_duration_milliseconds = 4;</code>
    *
    * <pre>
    * Voltage minimum duration (ms). Precision: 10
    * </pre>
    */
   public int getVoltageMinimumDurationMilliseconds() {
     return voltageMinimumDurationMilliseconds_;
   }
   /**
    * <code>optional uint32 voltage_minimum_duration_milliseconds = 4;</code>
    *
    * <pre>
    * Voltage minimum duration (ms). Precision: 10
    * </pre>
    */
   public Builder setVoltageMinimumDurationMilliseconds(int value) {
     bitField0_ |= 0x00000008;
     voltageMinimumDurationMilliseconds_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 voltage_minimum_duration_milliseconds = 4;</code>
    *
    * <pre>
    * Voltage minimum duration (ms). Precision: 10
    * </pre>
    */
   public Builder clearVoltageMinimumDurationMilliseconds() {
     bitField0_ = (bitField0_ & ~0x00000008);
     voltageMinimumDurationMilliseconds_ = 0;
     onChanged();
     return this;
   }

   private float voltageCrankAverage_ ;
   /**
    * <code>optional float voltage_crank_average = 5;</code>
    *
    * <pre>
    * Voltage crank average (V). Precision: 0.01
    * </pre>
    */
   public boolean hasVoltageCrankAverage() {
     return ((bitField0_ & 0x00000010) == 0x00000010);
   }
   /**
    * <code>optional float voltage_crank_average = 5;</code>
    *
    * <pre>
    * Voltage crank average (V). Precision: 0.01
    * </pre>
    */
   public float getVoltageCrankAverage() {
     return voltageCrankAverage_;
   }
   /**
    * <code>optional float voltage_crank_average = 5;</code>
    *
    * <pre>
    * Voltage crank average (V). Precision: 0.01
    * </pre>
    */
   public Builder setVoltageCrankAverage(float value) {
     bitField0_ |= 0x00000010;
     voltageCrankAverage_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional float voltage_crank_average = 5;</code>
    *
    * <pre>
    * Voltage crank average (V). Precision: 0.01
    * </pre>
    */
   public Builder clearVoltageCrankAverage() {
     bitField0_ = (bitField0_ & ~0x00000010);
     voltageCrankAverage_ = 0F;
     onChanged();
     return this;
   }

   private int voltageCrankAverageDurationMilliseconds_ ;
   /**
    * <code>optional uint32 voltage_crank_average_duration_milliseconds = 6;</code>
    *
    * <pre>
    * Voltage crank average duration (ms). Precision: 10
    * </pre>
    */
   public boolean hasVoltageCrankAverageDurationMilliseconds() {
     return ((bitField0_ & 0x00000020) == 0x00000020);
   }
   /**
    * <code>optional uint32 voltage_crank_average_duration_milliseconds = 6;</code>
    *
    * <pre>
    * Voltage crank average duration (ms). Precision: 10
    * </pre>
    */
   public int getVoltageCrankAverageDurationMilliseconds() {
     return voltageCrankAverageDurationMilliseconds_;
   }
   /**
    * <code>optional uint32 voltage_crank_average_duration_milliseconds = 6;</code>
    *
    * <pre>
    * Voltage crank average duration (ms). Precision: 10
    * </pre>
    */
   public Builder setVoltageCrankAverageDurationMilliseconds(int value) {
     bitField0_ |= 0x00000020;
     voltageCrankAverageDurationMilliseconds_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 voltage_crank_average_duration_milliseconds = 6;</code>
    *
    * <pre>
    * Voltage crank average duration (ms). Precision: 10
    * </pre>
    */
   public Builder clearVoltageCrankAverageDurationMilliseconds() {
     bitField0_ = (bitField0_ & ~0x00000020);
     voltageCrankAverageDurationMilliseconds_ = 0;
     onChanged();
     return this;
   }

   private float voltagePostCrank_ ;
   /**
    * <code>optional float voltage_post_crank = 7;</code>
    *
    * <pre>
    * Voltage post crank (V). Precision: 0.01
    * </pre>
    */
   public boolean hasVoltagePostCrank() {
     return ((bitField0_ & 0x00000040) == 0x00000040);
   }
   /**
    * <code>optional float voltage_post_crank = 7;</code>
    *
    * <pre>
    * Voltage post crank (V). Precision: 0.01
    * </pre>
    */
   public float getVoltagePostCrank() {
     return voltagePostCrank_;
   }
   /**
    * <code>optional float voltage_post_crank = 7;</code>
    *
    * <pre>
    * Voltage post crank (V). Precision: 0.01
    * </pre>
    */
   public Builder setVoltagePostCrank(float value) {
     bitField0_ |= 0x00000040;
     voltagePostCrank_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional float voltage_post_crank = 7;</code>
    *
    * <pre>
    * Voltage post crank (V). Precision: 0.01
    * </pre>
    */
   public Builder clearVoltagePostCrank() {
     bitField0_ = (bitField0_ & ~0x00000040);
     voltagePostCrank_ = 0F;
     onChanged();
     return this;
   }

   private int temperature_ ;
   /**
    * <code>optional sint32 temperature = 8;</code>
    *
    * <pre>
    * Temperature (in degrees Celsius). Precision: 1
    * </pre>
    */
   public boolean hasTemperature() {
     return ((bitField0_ & 0x00000080) == 0x00000080);
   }
   /**
    * <code>optional sint32 temperature = 8;</code>
    *
    * <pre>
    * Temperature (in degrees Celsius). Precision: 1
    * </pre>
    */
   public int getTemperature() {
     return temperature_;
   }
   /**
    * <code>optional sint32 temperature = 8;</code>
    *
    * <pre>
    * Temperature (in degrees Celsius). Precision: 1
    * </pre>
    */
   public Builder setTemperature(int value) {
     bitField0_ |= 0x00000080;
     temperature_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional sint32 temperature = 8;</code>
    *
    * <pre>
    * Temperature (in degrees Celsius). Precision: 1
    * </pre>
    */
   public Builder clearTemperature() {
     bitField0_ = (bitField0_ & ~0x00000080);
     temperature_ = 0;
     onChanged();
     return this;
   }

   // @@protoc_insertion_point(builder_scope:BatteryCrank)
 }

 static {
   defaultInstance = new BatteryCrank(true);
   defaultInstance.initFields();
 }

 // @@protoc_insertion_point(class_scope:BatteryCrank)
}

private static final com.google.protobuf.Descriptors.Descriptor
 internal_static_BatteryCrank_descriptor;
private static
 com.google.protobuf.GeneratedMessage.FieldAccessorTable
   internal_static_BatteryCrank_fieldAccessorTable;

public static com.google.protobuf.Descriptors.FileDescriptor
   getDescriptor() {
 return descriptor;
}
private static com.google.protobuf.Descriptors.FileDescriptor
   descriptor;
static {
 java.lang.String[] descriptorData = {
   "\n\027BatteryCrankProto.proto\032\026EventHeaderPr" +
   "oto.proto\"\237\002\n\014BatteryCrank\022\034\n\006header\030\001 \002" +
   "(\0132\014.EventHeader\022$\n\034voltage_average_befo" +
   "re_crank\030\002 \001(\002\022\027\n\017voltage_minimum\030\003 \001(\002\022" +
   "-\n%voltage_minimum_duration_milliseconds" +
   "\030\004 \001(\r\022\035\n\025voltage_crank_average\030\005 \001(\002\0223\n" +
   "+voltage_crank_average_duration_millisec" +
   "onds\030\006 \001(\r\022\032\n\022voltage_post_crank\030\007 \001(\002\022\023" +
   "\n\013temperature\030\010 \001(\021"
 };
 com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
     new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
       public com.google.protobuf.ExtensionRegistry assignDescriptors(
           com.google.protobuf.Descriptors.FileDescriptor root) {
         descriptor = root;
         return null;
       }
     };
 com.google.protobuf.Descriptors.FileDescriptor
   .internalBuildGeneratedFileFrom(descriptorData,
     new com.google.protobuf.Descriptors.FileDescriptor[] {
       EventHeaderProto.getDescriptor(),
     }, assigner);
 internal_static_BatteryCrank_descriptor =
   getDescriptor().getMessageTypes().get(0);
 internal_static_BatteryCrank_fieldAccessorTable = new
   com.google.protobuf.GeneratedMessage.FieldAccessorTable(
     internal_static_BatteryCrank_descriptor,
     new java.lang.String[] { "Header", "VoltageAverageBeforeCrank", "VoltageMinimum", "VoltageMinimumDurationMilliseconds", "VoltageCrankAverage", "VoltageCrankAverageDurationMilliseconds", "VoltagePostCrank", "Temperature", });
 EventHeaderProto.getDescriptor();
}

// @@protoc_insertion_point(outer_class_scope)
}
