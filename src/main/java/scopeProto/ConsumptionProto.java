package scopeProto;

//Generated by the protocol buffer compiler.  DO NOT EDIT!
//source: ConsumptionProto.proto

public final class ConsumptionProto {
private ConsumptionProto() {}
public static void registerAllExtensions(
   com.google.protobuf.ExtensionRegistry registry) {
}
public interface ConsumptionOrBuilder extends
   // @@protoc_insertion_point(interface_extends:Consumption)
   com.google.protobuf.MessageOrBuilder {

 /**
  * <code>required .EventHeader header = 1;</code>
  */
 boolean hasHeader();
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 EventHeaderProto.EventHeader getHeader();
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 EventHeaderProto.EventHeaderOrBuilder getHeaderOrBuilder();

 /**
  * <code>optional .ConsumptionReason reason = 2 [default = CONSUMPTION_REASON_CO2_TRIP_END];</code>
  *
  * <pre>
  * Event reason (see ConsumptionReason enum)
  * </pre>
  */
 boolean hasReason();
 /**
  * <code>optional .ConsumptionReason reason = 2 [default = CONSUMPTION_REASON_CO2_TRIP_END];</code>
  *
  * <pre>
  * Event reason (see ConsumptionReason enum)
  * </pre>
  */
 ConsumptionReasonProto.ConsumptionReason getReason();

 /**
  * <code>optional .ConsumptionFuelType fuel_type = 3 [default = CONSUMPTION_FUEL_TYPE_PETROL];</code>
  *
  * <pre>
  * Fuel type (see ConsumptionFuelType enum)
  * </pre>
  */
 boolean hasFuelType();
 /**
  * <code>optional .ConsumptionFuelType fuel_type = 3 [default = CONSUMPTION_FUEL_TYPE_PETROL];</code>
  *
  * <pre>
  * Fuel type (see ConsumptionFuelType enum)
  * </pre>
  */
 ConsumptionFuelTypeProto.ConsumptionFuelType getFuelType();

 /**
  * <code>optional uint32 idle_time = 4;</code>
  *
  * <pre>
  * Idle time (seconds)
  * </pre>
  */
 boolean hasIdleTime();
 /**
  * <code>optional uint32 idle_time = 4;</code>
  *
  * <pre>
  * Idle time (seconds)
  * </pre>
  */
 int getIdleTime();

 /**
  * <code>optional uint32 trip_duration = 5;</code>
  *
  * <pre>
  * Trip duration (seconds)
  * </pre>
  */
 boolean hasTripDuration();
 /**
  * <code>optional uint32 trip_duration = 5;</code>
  *
  * <pre>
  * Trip duration (seconds)
  * </pre>
  */
 int getTripDuration();

 /**
  * <code>optional uint32 trip_distance = 6;</code>
  *
  * <pre>
  * Trip distance (meters)
  * </pre>
  */
 boolean hasTripDistance();
 /**
  * <code>optional uint32 trip_distance = 6;</code>
  *
  * <pre>
  * Trip distance (meters)
  * </pre>
  */
 int getTripDistance();

 /**
  * <code>optional uint32 co2_used = 7;</code>
  *
  * <pre>
  * CO2 Used (grams)
  * </pre>
  */
 boolean hasCo2Used();
 /**
  * <code>optional uint32 co2_used = 7;</code>
  *
  * <pre>
  * CO2 Used (grams)
  * </pre>
  */
 int getCo2Used();

 /**
  * <code>optional uint32 fuel_mc1 = 8;</code>
  *
  * <pre>
  * Fuel MC1
  * </pre>
  */
 boolean hasFuelMc1();
 /**
  * <code>optional uint32 fuel_mc1 = 8;</code>
  *
  * <pre>
  * Fuel MC1
  * </pre>
  */
 int getFuelMc1();

 /**
  * <code>optional uint32 fuel_idle = 9;</code>
  *
  * <pre>
  * Fuel idle
  * </pre>
  */
 boolean hasFuelIdle();
 /**
  * <code>optional uint32 fuel_idle = 9;</code>
  *
  * <pre>
  * Fuel idle
  * </pre>
  */
 int getFuelIdle();

 /**
  * <code>optional uint32 number_of_stops = 10;</code>
  *
  * <pre>
  * Number of stops 
  * </pre>
  */
 boolean hasNumberOfStops();
 /**
  * <code>optional uint32 number_of_stops = 10;</code>
  *
  * <pre>
  * Number of stops 
  * </pre>
  */
 int getNumberOfStops();

 /**
  * <code>optional uint32 confidence = 11;</code>
  *
  * <pre>
  * Confidence
  * </pre>
  */
 boolean hasConfidence();
 /**
  * <code>optional uint32 confidence = 11;</code>
  *
  * <pre>
  * Confidence
  * </pre>
  */
 int getConfidence();
}
/**
* Protobuf type {@code Consumption}
*
* <pre>
* Consumption event
* </pre>
*/
public static final class Consumption extends
   com.google.protobuf.GeneratedMessage implements
   // @@protoc_insertion_point(message_implements:Consumption)
   ConsumptionOrBuilder {
 // Use Consumption.newBuilder() to construct.
 private Consumption(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
   super(builder);
   this.unknownFields = builder.getUnknownFields();
 }
 private Consumption(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

 private static final Consumption defaultInstance;
 public static Consumption getDefaultInstance() {
   return defaultInstance;
 }

 public Consumption getDefaultInstanceForType() {
   return defaultInstance;
 }

 private final com.google.protobuf.UnknownFieldSet unknownFields;
 @java.lang.Override
 public final com.google.protobuf.UnknownFieldSet
     getUnknownFields() {
   return this.unknownFields;
 }
 private Consumption(
     com.google.protobuf.CodedInputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   initFields();
   int mutable_bitField0_ = 0;
   com.google.protobuf.UnknownFieldSet.Builder unknownFields =
       com.google.protobuf.UnknownFieldSet.newBuilder();
   try {
     boolean done = false;
     while (!done) {
       int tag = input.readTag();
       switch (tag) {
         case 0:
           done = true;
           break;
         default: {
           if (!parseUnknownField(input, unknownFields,
                                  extensionRegistry, tag)) {
             done = true;
           }
           break;
         }
         case 10: {
           EventHeaderProto.EventHeader.Builder subBuilder = null;
           if (((bitField0_ & 0x00000001) == 0x00000001)) {
             subBuilder = header_.toBuilder();
           }
           header_ = input.readMessage(EventHeaderProto.EventHeader.PARSER, extensionRegistry);
           if (subBuilder != null) {
             subBuilder.mergeFrom(header_);
             header_ = subBuilder.buildPartial();
           }
           bitField0_ |= 0x00000001;
           break;
         }
         case 16: {
           int rawValue = input.readEnum();
           ConsumptionReasonProto.ConsumptionReason value = ConsumptionReasonProto.ConsumptionReason.valueOf(rawValue);
           if (value == null) {
             unknownFields.mergeVarintField(2, rawValue);
           } else {
             bitField0_ |= 0x00000002;
             reason_ = value;
           }
           break;
         }
         case 24: {
           int rawValue = input.readEnum();
           ConsumptionFuelTypeProto.ConsumptionFuelType value = ConsumptionFuelTypeProto.ConsumptionFuelType.valueOf(rawValue);
           if (value == null) {
             unknownFields.mergeVarintField(3, rawValue);
           } else {
             bitField0_ |= 0x00000004;
             fuelType_ = value;
           }
           break;
         }
         case 32: {
           bitField0_ |= 0x00000008;
           idleTime_ = input.readUInt32();
           break;
         }
         case 40: {
           bitField0_ |= 0x00000010;
           tripDuration_ = input.readUInt32();
           break;
         }
         case 48: {
           bitField0_ |= 0x00000020;
           tripDistance_ = input.readUInt32();
           break;
         }
         case 56: {
           bitField0_ |= 0x00000040;
           co2Used_ = input.readUInt32();
           break;
         }
         case 64: {
           bitField0_ |= 0x00000080;
           fuelMc1_ = input.readUInt32();
           break;
         }
         case 72: {
           bitField0_ |= 0x00000100;
           fuelIdle_ = input.readUInt32();
           break;
         }
         case 80: {
           bitField0_ |= 0x00000200;
           numberOfStops_ = input.readUInt32();
           break;
         }
         case 88: {
           bitField0_ |= 0x00000400;
           confidence_ = input.readUInt32();
           break;
         }
       }
     }
   } catch (com.google.protobuf.InvalidProtocolBufferException e) {
     throw e.setUnfinishedMessage(this);
   } catch (java.io.IOException e) {
     throw new com.google.protobuf.InvalidProtocolBufferException(
         e.getMessage()).setUnfinishedMessage(this);
   } finally {
     this.unknownFields = unknownFields.build();
     makeExtensionsImmutable();
   }
 }
 public static final com.google.protobuf.Descriptors.Descriptor
     getDescriptor() {
   return ConsumptionProto.internal_static_Consumption_descriptor;
 }

 protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
     internalGetFieldAccessorTable() {
   return ConsumptionProto.internal_static_Consumption_fieldAccessorTable
       .ensureFieldAccessorsInitialized(
           ConsumptionProto.Consumption.class, ConsumptionProto.Consumption.Builder.class);
 }

 public static com.google.protobuf.Parser<Consumption> PARSER =
     new com.google.protobuf.AbstractParser<Consumption>() {
   public Consumption parsePartialFrom(
       com.google.protobuf.CodedInputStream input,
       com.google.protobuf.ExtensionRegistryLite extensionRegistry)
       throws com.google.protobuf.InvalidProtocolBufferException {
     return new Consumption(input, extensionRegistry);
   }
 };

 @java.lang.Override
 public com.google.protobuf.Parser<Consumption> getParserForType() {
   return PARSER;
 }

 private int bitField0_;
 public static final int HEADER_FIELD_NUMBER = 1;
 private EventHeaderProto.EventHeader header_;
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 public boolean hasHeader() {
   return ((bitField0_ & 0x00000001) == 0x00000001);
 }
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 public EventHeaderProto.EventHeader getHeader() {
   return header_;
 }
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 public EventHeaderProto.EventHeaderOrBuilder getHeaderOrBuilder() {
   return header_;
 }

 public static final int REASON_FIELD_NUMBER = 2;
 private ConsumptionReasonProto.ConsumptionReason reason_;
 /**
  * <code>optional .ConsumptionReason reason = 2 [default = CONSUMPTION_REASON_CO2_TRIP_END];</code>
  *
  * <pre>
  * Event reason (see ConsumptionReason enum)
  * </pre>
  */
 public boolean hasReason() {
   return ((bitField0_ & 0x00000002) == 0x00000002);
 }
 /**
  * <code>optional .ConsumptionReason reason = 2 [default = CONSUMPTION_REASON_CO2_TRIP_END];</code>
  *
  * <pre>
  * Event reason (see ConsumptionReason enum)
  * </pre>
  */
 public ConsumptionReasonProto.ConsumptionReason getReason() {
   return reason_;
 }

 public static final int FUEL_TYPE_FIELD_NUMBER = 3;
 private ConsumptionFuelTypeProto.ConsumptionFuelType fuelType_;
 /**
  * <code>optional .ConsumptionFuelType fuel_type = 3 [default = CONSUMPTION_FUEL_TYPE_PETROL];</code>
  *
  * <pre>
  * Fuel type (see ConsumptionFuelType enum)
  * </pre>
  */
 public boolean hasFuelType() {
   return ((bitField0_ & 0x00000004) == 0x00000004);
 }
 /**
  * <code>optional .ConsumptionFuelType fuel_type = 3 [default = CONSUMPTION_FUEL_TYPE_PETROL];</code>
  *
  * <pre>
  * Fuel type (see ConsumptionFuelType enum)
  * </pre>
  */
 public ConsumptionFuelTypeProto.ConsumptionFuelType getFuelType() {
   return fuelType_;
 }

 public static final int IDLE_TIME_FIELD_NUMBER = 4;
 private int idleTime_;
 /**
  * <code>optional uint32 idle_time = 4;</code>
  *
  * <pre>
  * Idle time (seconds)
  * </pre>
  */
 public boolean hasIdleTime() {
   return ((bitField0_ & 0x00000008) == 0x00000008);
 }
 /**
  * <code>optional uint32 idle_time = 4;</code>
  *
  * <pre>
  * Idle time (seconds)
  * </pre>
  */
 public int getIdleTime() {
   return idleTime_;
 }

 public static final int TRIP_DURATION_FIELD_NUMBER = 5;
 private int tripDuration_;
 /**
  * <code>optional uint32 trip_duration = 5;</code>
  *
  * <pre>
  * Trip duration (seconds)
  * </pre>
  */
 public boolean hasTripDuration() {
   return ((bitField0_ & 0x00000010) == 0x00000010);
 }
 /**
  * <code>optional uint32 trip_duration = 5;</code>
  *
  * <pre>
  * Trip duration (seconds)
  * </pre>
  */
 public int getTripDuration() {
   return tripDuration_;
 }

 public static final int TRIP_DISTANCE_FIELD_NUMBER = 6;
 private int tripDistance_;
 /**
  * <code>optional uint32 trip_distance = 6;</code>
  *
  * <pre>
  * Trip distance (meters)
  * </pre>
  */
 public boolean hasTripDistance() {
   return ((bitField0_ & 0x00000020) == 0x00000020);
 }
 /**
  * <code>optional uint32 trip_distance = 6;</code>
  *
  * <pre>
  * Trip distance (meters)
  * </pre>
  */
 public int getTripDistance() {
   return tripDistance_;
 }

 public static final int CO2_USED_FIELD_NUMBER = 7;
 private int co2Used_;
 /**
  * <code>optional uint32 co2_used = 7;</code>
  *
  * <pre>
  * CO2 Used (grams)
  * </pre>
  */
 public boolean hasCo2Used() {
   return ((bitField0_ & 0x00000040) == 0x00000040);
 }
 /**
  * <code>optional uint32 co2_used = 7;</code>
  *
  * <pre>
  * CO2 Used (grams)
  * </pre>
  */
 public int getCo2Used() {
   return co2Used_;
 }

 public static final int FUEL_MC1_FIELD_NUMBER = 8;
 private int fuelMc1_;
 /**
  * <code>optional uint32 fuel_mc1 = 8;</code>
  *
  * <pre>
  * Fuel MC1
  * </pre>
  */
 public boolean hasFuelMc1() {
   return ((bitField0_ & 0x00000080) == 0x00000080);
 }
 /**
  * <code>optional uint32 fuel_mc1 = 8;</code>
  *
  * <pre>
  * Fuel MC1
  * </pre>
  */
 public int getFuelMc1() {
   return fuelMc1_;
 }

 public static final int FUEL_IDLE_FIELD_NUMBER = 9;
 private int fuelIdle_;
 /**
  * <code>optional uint32 fuel_idle = 9;</code>
  *
  * <pre>
  * Fuel idle
  * </pre>
  */
 public boolean hasFuelIdle() {
   return ((bitField0_ & 0x00000100) == 0x00000100);
 }
 /**
  * <code>optional uint32 fuel_idle = 9;</code>
  *
  * <pre>
  * Fuel idle
  * </pre>
  */
 public int getFuelIdle() {
   return fuelIdle_;
 }

 public static final int NUMBER_OF_STOPS_FIELD_NUMBER = 10;
 private int numberOfStops_;
 /**
  * <code>optional uint32 number_of_stops = 10;</code>
  *
  * <pre>
  * Number of stops 
  * </pre>
  */
 public boolean hasNumberOfStops() {
   return ((bitField0_ & 0x00000200) == 0x00000200);
 }
 /**
  * <code>optional uint32 number_of_stops = 10;</code>
  *
  * <pre>
  * Number of stops 
  * </pre>
  */
 public int getNumberOfStops() {
   return numberOfStops_;
 }

 public static final int CONFIDENCE_FIELD_NUMBER = 11;
 private int confidence_;
 /**
  * <code>optional uint32 confidence = 11;</code>
  *
  * <pre>
  * Confidence
  * </pre>
  */
 public boolean hasConfidence() {
   return ((bitField0_ & 0x00000400) == 0x00000400);
 }
 /**
  * <code>optional uint32 confidence = 11;</code>
  *
  * <pre>
  * Confidence
  * </pre>
  */
 public int getConfidence() {
   return confidence_;
 }

 private void initFields() {
   header_ = EventHeaderProto.EventHeader.getDefaultInstance();
   reason_ = ConsumptionReasonProto.ConsumptionReason.CONSUMPTION_REASON_CO2_TRIP_END;
   fuelType_ = ConsumptionFuelTypeProto.ConsumptionFuelType.CONSUMPTION_FUEL_TYPE_PETROL;
   idleTime_ = 0;
   tripDuration_ = 0;
   tripDistance_ = 0;
   co2Used_ = 0;
   fuelMc1_ = 0;
   fuelIdle_ = 0;
   numberOfStops_ = 0;
   confidence_ = 0;
 }
 private byte memoizedIsInitialized = -1;
 public final boolean isInitialized() {
   byte isInitialized = memoizedIsInitialized;
   if (isInitialized == 1) return true;
   if (isInitialized == 0) return false;

   if (!hasHeader()) {
     memoizedIsInitialized = 0;
     return false;
   }
   if (!getHeader().isInitialized()) {
     memoizedIsInitialized = 0;
     return false;
   }
   memoizedIsInitialized = 1;
   return true;
 }

 public void writeTo(com.google.protobuf.CodedOutputStream output)
                     throws java.io.IOException {
   getSerializedSize();
   if (((bitField0_ & 0x00000001) == 0x00000001)) {
     output.writeMessage(1, header_);
   }
   if (((bitField0_ & 0x00000002) == 0x00000002)) {
     output.writeEnum(2, reason_.getNumber());
   }
   if (((bitField0_ & 0x00000004) == 0x00000004)) {
     output.writeEnum(3, fuelType_.getNumber());
   }
   if (((bitField0_ & 0x00000008) == 0x00000008)) {
     output.writeUInt32(4, idleTime_);
   }
   if (((bitField0_ & 0x00000010) == 0x00000010)) {
     output.writeUInt32(5, tripDuration_);
   }
   if (((bitField0_ & 0x00000020) == 0x00000020)) {
     output.writeUInt32(6, tripDistance_);
   }
   if (((bitField0_ & 0x00000040) == 0x00000040)) {
     output.writeUInt32(7, co2Used_);
   }
   if (((bitField0_ & 0x00000080) == 0x00000080)) {
     output.writeUInt32(8, fuelMc1_);
   }
   if (((bitField0_ & 0x00000100) == 0x00000100)) {
     output.writeUInt32(9, fuelIdle_);
   }
   if (((bitField0_ & 0x00000200) == 0x00000200)) {
     output.writeUInt32(10, numberOfStops_);
   }
   if (((bitField0_ & 0x00000400) == 0x00000400)) {
     output.writeUInt32(11, confidence_);
   }
   getUnknownFields().writeTo(output);
 }

 private int memoizedSerializedSize = -1;
 public int getSerializedSize() {
   int size = memoizedSerializedSize;
   if (size != -1) return size;

   size = 0;
   if (((bitField0_ & 0x00000001) == 0x00000001)) {
     size += com.google.protobuf.CodedOutputStream
       .computeMessageSize(1, header_);
   }
   if (((bitField0_ & 0x00000002) == 0x00000002)) {
     size += com.google.protobuf.CodedOutputStream
       .computeEnumSize(2, reason_.getNumber());
   }
   if (((bitField0_ & 0x00000004) == 0x00000004)) {
     size += com.google.protobuf.CodedOutputStream
       .computeEnumSize(3, fuelType_.getNumber());
   }
   if (((bitField0_ & 0x00000008) == 0x00000008)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(4, idleTime_);
   }
   if (((bitField0_ & 0x00000010) == 0x00000010)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(5, tripDuration_);
   }
   if (((bitField0_ & 0x00000020) == 0x00000020)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(6, tripDistance_);
   }
   if (((bitField0_ & 0x00000040) == 0x00000040)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(7, co2Used_);
   }
   if (((bitField0_ & 0x00000080) == 0x00000080)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(8, fuelMc1_);
   }
   if (((bitField0_ & 0x00000100) == 0x00000100)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(9, fuelIdle_);
   }
   if (((bitField0_ & 0x00000200) == 0x00000200)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(10, numberOfStops_);
   }
   if (((bitField0_ & 0x00000400) == 0x00000400)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(11, confidence_);
   }
   size += getUnknownFields().getSerializedSize();
   memoizedSerializedSize = size;
   return size;
 }

 private static final long serialVersionUID = 0L;
 @java.lang.Override
 protected java.lang.Object writeReplace()
     throws java.io.ObjectStreamException {
   return super.writeReplace();
 }

 public static ConsumptionProto.Consumption parseFrom(
     com.google.protobuf.ByteString data)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data);
 }
 public static ConsumptionProto.Consumption parseFrom(
     com.google.protobuf.ByteString data,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data, extensionRegistry);
 }
 public static ConsumptionProto.Consumption parseFrom(byte[] data)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data);
 }
 public static ConsumptionProto.Consumption parseFrom(
     byte[] data,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data, extensionRegistry);
 }
 public static ConsumptionProto.Consumption parseFrom(java.io.InputStream input)
     throws java.io.IOException {
   return PARSER.parseFrom(input);
 }
 public static ConsumptionProto.Consumption parseFrom(
     java.io.InputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseFrom(input, extensionRegistry);
 }
 public static ConsumptionProto.Consumption parseDelimitedFrom(java.io.InputStream input)
     throws java.io.IOException {
   return PARSER.parseDelimitedFrom(input);
 }
 public static ConsumptionProto.Consumption parseDelimitedFrom(
     java.io.InputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseDelimitedFrom(input, extensionRegistry);
 }
 public static ConsumptionProto.Consumption parseFrom(
     com.google.protobuf.CodedInputStream input)
     throws java.io.IOException {
   return PARSER.parseFrom(input);
 }
 public static ConsumptionProto.Consumption parseFrom(
     com.google.protobuf.CodedInputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseFrom(input, extensionRegistry);
 }

 public static Builder newBuilder() { return Builder.create(); }
 public Builder newBuilderForType() { return newBuilder(); }
 public static Builder newBuilder(ConsumptionProto.Consumption prototype) {
   return newBuilder().mergeFrom(prototype);
 }
 public Builder toBuilder() { return newBuilder(this); }

 @java.lang.Override
 protected Builder newBuilderForType(
     com.google.protobuf.GeneratedMessage.BuilderParent parent) {
   Builder builder = new Builder(parent);
   return builder;
 }
 /**
  * Protobuf type {@code Consumption}
  *
  * <pre>
  * Consumption event
  * </pre>
  */
 public static final class Builder extends
     com.google.protobuf.GeneratedMessage.Builder<Builder> implements
     // @@protoc_insertion_point(builder_implements:Consumption)
     ConsumptionProto.ConsumptionOrBuilder {
   public static final com.google.protobuf.Descriptors.Descriptor
       getDescriptor() {
     return ConsumptionProto.internal_static_Consumption_descriptor;
   }

   protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
       internalGetFieldAccessorTable() {
     return ConsumptionProto.internal_static_Consumption_fieldAccessorTable
         .ensureFieldAccessorsInitialized(
             ConsumptionProto.Consumption.class, ConsumptionProto.Consumption.Builder.class);
   }

   // Construct using ConsumptionProto.Consumption.newBuilder()
   private Builder() {
     maybeForceBuilderInitialization();
   }

   private Builder(
       com.google.protobuf.GeneratedMessage.BuilderParent parent) {
     super(parent);
     maybeForceBuilderInitialization();
   }
   private void maybeForceBuilderInitialization() {
     if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
       getHeaderFieldBuilder();
     }
   }
   private static Builder create() {
     return new Builder();
   }

   public Builder clear() {
     super.clear();
     if (headerBuilder_ == null) {
       header_ = EventHeaderProto.EventHeader.getDefaultInstance();
     } else {
       headerBuilder_.clear();
     }
     bitField0_ = (bitField0_ & ~0x00000001);
     reason_ = ConsumptionReasonProto.ConsumptionReason.CONSUMPTION_REASON_CO2_TRIP_END;
     bitField0_ = (bitField0_ & ~0x00000002);
     fuelType_ = ConsumptionFuelTypeProto.ConsumptionFuelType.CONSUMPTION_FUEL_TYPE_PETROL;
     bitField0_ = (bitField0_ & ~0x00000004);
     idleTime_ = 0;
     bitField0_ = (bitField0_ & ~0x00000008);
     tripDuration_ = 0;
     bitField0_ = (bitField0_ & ~0x00000010);
     tripDistance_ = 0;
     bitField0_ = (bitField0_ & ~0x00000020);
     co2Used_ = 0;
     bitField0_ = (bitField0_ & ~0x00000040);
     fuelMc1_ = 0;
     bitField0_ = (bitField0_ & ~0x00000080);
     fuelIdle_ = 0;
     bitField0_ = (bitField0_ & ~0x00000100);
     numberOfStops_ = 0;
     bitField0_ = (bitField0_ & ~0x00000200);
     confidence_ = 0;
     bitField0_ = (bitField0_ & ~0x00000400);
     return this;
   }

   public Builder clone() {
     return create().mergeFrom(buildPartial());
   }

   public com.google.protobuf.Descriptors.Descriptor
       getDescriptorForType() {
     return ConsumptionProto.internal_static_Consumption_descriptor;
   }

   public ConsumptionProto.Consumption getDefaultInstanceForType() {
     return ConsumptionProto.Consumption.getDefaultInstance();
   }

   public ConsumptionProto.Consumption build() {
     ConsumptionProto.Consumption result = buildPartial();
     if (!result.isInitialized()) {
       throw newUninitializedMessageException(result);
     }
     return result;
   }

   public ConsumptionProto.Consumption buildPartial() {
     ConsumptionProto.Consumption result = new ConsumptionProto.Consumption(this);
     int from_bitField0_ = bitField0_;
     int to_bitField0_ = 0;
     if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
       to_bitField0_ |= 0x00000001;
     }
     if (headerBuilder_ == null) {
       result.header_ = header_;
     } else {
       result.header_ = headerBuilder_.build();
     }
     if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
       to_bitField0_ |= 0x00000002;
     }
     result.reason_ = reason_;
     if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
       to_bitField0_ |= 0x00000004;
     }
     result.fuelType_ = fuelType_;
     if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
       to_bitField0_ |= 0x00000008;
     }
     result.idleTime_ = idleTime_;
     if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
       to_bitField0_ |= 0x00000010;
     }
     result.tripDuration_ = tripDuration_;
     if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
       to_bitField0_ |= 0x00000020;
     }
     result.tripDistance_ = tripDistance_;
     if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
       to_bitField0_ |= 0x00000040;
     }
     result.co2Used_ = co2Used_;
     if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
       to_bitField0_ |= 0x00000080;
     }
     result.fuelMc1_ = fuelMc1_;
     if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
       to_bitField0_ |= 0x00000100;
     }
     result.fuelIdle_ = fuelIdle_;
     if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
       to_bitField0_ |= 0x00000200;
     }
     result.numberOfStops_ = numberOfStops_;
     if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
       to_bitField0_ |= 0x00000400;
     }
     result.confidence_ = confidence_;
     result.bitField0_ = to_bitField0_;
     onBuilt();
     return result;
   }

   public Builder mergeFrom(com.google.protobuf.Message other) {
     if (other instanceof ConsumptionProto.Consumption) {
       return mergeFrom((ConsumptionProto.Consumption)other);
     } else {
       super.mergeFrom(other);
       return this;
     }
   }

   public Builder mergeFrom(ConsumptionProto.Consumption other) {
     if (other == ConsumptionProto.Consumption.getDefaultInstance()) return this;
     if (other.hasHeader()) {
       mergeHeader(other.getHeader());
     }
     if (other.hasReason()) {
       setReason(other.getReason());
     }
     if (other.hasFuelType()) {
       setFuelType(other.getFuelType());
     }
     if (other.hasIdleTime()) {
       setIdleTime(other.getIdleTime());
     }
     if (other.hasTripDuration()) {
       setTripDuration(other.getTripDuration());
     }
     if (other.hasTripDistance()) {
       setTripDistance(other.getTripDistance());
     }
     if (other.hasCo2Used()) {
       setCo2Used(other.getCo2Used());
     }
     if (other.hasFuelMc1()) {
       setFuelMc1(other.getFuelMc1());
     }
     if (other.hasFuelIdle()) {
       setFuelIdle(other.getFuelIdle());
     }
     if (other.hasNumberOfStops()) {
       setNumberOfStops(other.getNumberOfStops());
     }
     if (other.hasConfidence()) {
       setConfidence(other.getConfidence());
     }
     this.mergeUnknownFields(other.getUnknownFields());
     return this;
   }

   public final boolean isInitialized() {
     if (!hasHeader()) {
       
       return false;
     }
     if (!getHeader().isInitialized()) {
       
       return false;
     }
     return true;
   }

   public Builder mergeFrom(
       com.google.protobuf.CodedInputStream input,
       com.google.protobuf.ExtensionRegistryLite extensionRegistry)
       throws java.io.IOException {
     ConsumptionProto.Consumption parsedMessage = null;
     try {
       parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
     } catch (com.google.protobuf.InvalidProtocolBufferException e) {
       parsedMessage = (ConsumptionProto.Consumption) e.getUnfinishedMessage();
       throw e;
     } finally {
       if (parsedMessage != null) {
         mergeFrom(parsedMessage);
       }
     }
     return this;
   }
   private int bitField0_;

   private EventHeaderProto.EventHeader header_ = EventHeaderProto.EventHeader.getDefaultInstance();
   private com.google.protobuf.SingleFieldBuilder<
       EventHeaderProto.EventHeader, EventHeaderProto.EventHeader.Builder, EventHeaderProto.EventHeaderOrBuilder> headerBuilder_;
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public boolean hasHeader() {
     return ((bitField0_ & 0x00000001) == 0x00000001);
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public EventHeaderProto.EventHeader getHeader() {
     if (headerBuilder_ == null) {
       return header_;
     } else {
       return headerBuilder_.getMessage();
     }
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder setHeader(EventHeaderProto.EventHeader value) {
     if (headerBuilder_ == null) {
       if (value == null) {
         throw new NullPointerException();
       }
       header_ = value;
       onChanged();
     } else {
       headerBuilder_.setMessage(value);
     }
     bitField0_ |= 0x00000001;
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder setHeader(
       EventHeaderProto.EventHeader.Builder builderForValue) {
     if (headerBuilder_ == null) {
       header_ = builderForValue.build();
       onChanged();
     } else {
       headerBuilder_.setMessage(builderForValue.build());
     }
     bitField0_ |= 0x00000001;
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder mergeHeader(EventHeaderProto.EventHeader value) {
     if (headerBuilder_ == null) {
       if (((bitField0_ & 0x00000001) == 0x00000001) &&
           header_ != EventHeaderProto.EventHeader.getDefaultInstance()) {
         header_ =
           EventHeaderProto.EventHeader.newBuilder(header_).mergeFrom(value).buildPartial();
       } else {
         header_ = value;
       }
       onChanged();
     } else {
       headerBuilder_.mergeFrom(value);
     }
     bitField0_ |= 0x00000001;
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder clearHeader() {
     if (headerBuilder_ == null) {
       header_ = EventHeaderProto.EventHeader.getDefaultInstance();
       onChanged();
     } else {
       headerBuilder_.clear();
     }
     bitField0_ = (bitField0_ & ~0x00000001);
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public EventHeaderProto.EventHeader.Builder getHeaderBuilder() {
     bitField0_ |= 0x00000001;
     onChanged();
     return getHeaderFieldBuilder().getBuilder();
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public EventHeaderProto.EventHeaderOrBuilder getHeaderOrBuilder() {
     if (headerBuilder_ != null) {
       return headerBuilder_.getMessageOrBuilder();
     } else {
       return header_;
     }
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   private com.google.protobuf.SingleFieldBuilder<
       EventHeaderProto.EventHeader, EventHeaderProto.EventHeader.Builder, EventHeaderProto.EventHeaderOrBuilder> 
       getHeaderFieldBuilder() {
     if (headerBuilder_ == null) {
       headerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
           EventHeaderProto.EventHeader, EventHeaderProto.EventHeader.Builder, EventHeaderProto.EventHeaderOrBuilder>(
               getHeader(),
               getParentForChildren(),
               isClean());
       header_ = null;
     }
     return headerBuilder_;
   }

   private ConsumptionReasonProto.ConsumptionReason reason_ = ConsumptionReasonProto.ConsumptionReason.CONSUMPTION_REASON_CO2_TRIP_END;
   /**
    * <code>optional .ConsumptionReason reason = 2 [default = CONSUMPTION_REASON_CO2_TRIP_END];</code>
    *
    * <pre>
    * Event reason (see ConsumptionReason enum)
    * </pre>
    */
   public boolean hasReason() {
     return ((bitField0_ & 0x00000002) == 0x00000002);
   }
   /**
    * <code>optional .ConsumptionReason reason = 2 [default = CONSUMPTION_REASON_CO2_TRIP_END];</code>
    *
    * <pre>
    * Event reason (see ConsumptionReason enum)
    * </pre>
    */
   public ConsumptionReasonProto.ConsumptionReason getReason() {
     return reason_;
   }
   /**
    * <code>optional .ConsumptionReason reason = 2 [default = CONSUMPTION_REASON_CO2_TRIP_END];</code>
    *
    * <pre>
    * Event reason (see ConsumptionReason enum)
    * </pre>
    */
   public Builder setReason(ConsumptionReasonProto.ConsumptionReason value) {
     if (value == null) {
       throw new NullPointerException();
     }
     bitField0_ |= 0x00000002;
     reason_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional .ConsumptionReason reason = 2 [default = CONSUMPTION_REASON_CO2_TRIP_END];</code>
    *
    * <pre>
    * Event reason (see ConsumptionReason enum)
    * </pre>
    */
   public Builder clearReason() {
     bitField0_ = (bitField0_ & ~0x00000002);
     reason_ = ConsumptionReasonProto.ConsumptionReason.CONSUMPTION_REASON_CO2_TRIP_END;
     onChanged();
     return this;
   }

   private ConsumptionFuelTypeProto.ConsumptionFuelType fuelType_ = ConsumptionFuelTypeProto.ConsumptionFuelType.CONSUMPTION_FUEL_TYPE_PETROL;
   /**
    * <code>optional .ConsumptionFuelType fuel_type = 3 [default = CONSUMPTION_FUEL_TYPE_PETROL];</code>
    *
    * <pre>
    * Fuel type (see ConsumptionFuelType enum)
    * </pre>
    */
   public boolean hasFuelType() {
     return ((bitField0_ & 0x00000004) == 0x00000004);
   }
   /**
    * <code>optional .ConsumptionFuelType fuel_type = 3 [default = CONSUMPTION_FUEL_TYPE_PETROL];</code>
    *
    * <pre>
    * Fuel type (see ConsumptionFuelType enum)
    * </pre>
    */
   public ConsumptionFuelTypeProto.ConsumptionFuelType getFuelType() {
     return fuelType_;
   }
   /**
    * <code>optional .ConsumptionFuelType fuel_type = 3 [default = CONSUMPTION_FUEL_TYPE_PETROL];</code>
    *
    * <pre>
    * Fuel type (see ConsumptionFuelType enum)
    * </pre>
    */
   public Builder setFuelType(ConsumptionFuelTypeProto.ConsumptionFuelType value) {
     if (value == null) {
       throw new NullPointerException();
     }
     bitField0_ |= 0x00000004;
     fuelType_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional .ConsumptionFuelType fuel_type = 3 [default = CONSUMPTION_FUEL_TYPE_PETROL];</code>
    *
    * <pre>
    * Fuel type (see ConsumptionFuelType enum)
    * </pre>
    */
   public Builder clearFuelType() {
     bitField0_ = (bitField0_ & ~0x00000004);
     fuelType_ = ConsumptionFuelTypeProto.ConsumptionFuelType.CONSUMPTION_FUEL_TYPE_PETROL;
     onChanged();
     return this;
   }

   private int idleTime_ ;
   /**
    * <code>optional uint32 idle_time = 4;</code>
    *
    * <pre>
    * Idle time (seconds)
    * </pre>
    */
   public boolean hasIdleTime() {
     return ((bitField0_ & 0x00000008) == 0x00000008);
   }
   /**
    * <code>optional uint32 idle_time = 4;</code>
    *
    * <pre>
    * Idle time (seconds)
    * </pre>
    */
   public int getIdleTime() {
     return idleTime_;
   }
   /**
    * <code>optional uint32 idle_time = 4;</code>
    *
    * <pre>
    * Idle time (seconds)
    * </pre>
    */
   public Builder setIdleTime(int value) {
     bitField0_ |= 0x00000008;
     idleTime_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 idle_time = 4;</code>
    *
    * <pre>
    * Idle time (seconds)
    * </pre>
    */
   public Builder clearIdleTime() {
     bitField0_ = (bitField0_ & ~0x00000008);
     idleTime_ = 0;
     onChanged();
     return this;
   }

   private int tripDuration_ ;
   /**
    * <code>optional uint32 trip_duration = 5;</code>
    *
    * <pre>
    * Trip duration (seconds)
    * </pre>
    */
   public boolean hasTripDuration() {
     return ((bitField0_ & 0x00000010) == 0x00000010);
   }
   /**
    * <code>optional uint32 trip_duration = 5;</code>
    *
    * <pre>
    * Trip duration (seconds)
    * </pre>
    */
   public int getTripDuration() {
     return tripDuration_;
   }
   /**
    * <code>optional uint32 trip_duration = 5;</code>
    *
    * <pre>
    * Trip duration (seconds)
    * </pre>
    */
   public Builder setTripDuration(int value) {
     bitField0_ |= 0x00000010;
     tripDuration_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 trip_duration = 5;</code>
    *
    * <pre>
    * Trip duration (seconds)
    * </pre>
    */
   public Builder clearTripDuration() {
     bitField0_ = (bitField0_ & ~0x00000010);
     tripDuration_ = 0;
     onChanged();
     return this;
   }

   private int tripDistance_ ;
   /**
    * <code>optional uint32 trip_distance = 6;</code>
    *
    * <pre>
    * Trip distance (meters)
    * </pre>
    */
   public boolean hasTripDistance() {
     return ((bitField0_ & 0x00000020) == 0x00000020);
   }
   /**
    * <code>optional uint32 trip_distance = 6;</code>
    *
    * <pre>
    * Trip distance (meters)
    * </pre>
    */
   public int getTripDistance() {
     return tripDistance_;
   }
   /**
    * <code>optional uint32 trip_distance = 6;</code>
    *
    * <pre>
    * Trip distance (meters)
    * </pre>
    */
   public Builder setTripDistance(int value) {
     bitField0_ |= 0x00000020;
     tripDistance_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 trip_distance = 6;</code>
    *
    * <pre>
    * Trip distance (meters)
    * </pre>
    */
   public Builder clearTripDistance() {
     bitField0_ = (bitField0_ & ~0x00000020);
     tripDistance_ = 0;
     onChanged();
     return this;
   }

   private int co2Used_ ;
   /**
    * <code>optional uint32 co2_used = 7;</code>
    *
    * <pre>
    * CO2 Used (grams)
    * </pre>
    */
   public boolean hasCo2Used() {
     return ((bitField0_ & 0x00000040) == 0x00000040);
   }
   /**
    * <code>optional uint32 co2_used = 7;</code>
    *
    * <pre>
    * CO2 Used (grams)
    * </pre>
    */
   public int getCo2Used() {
     return co2Used_;
   }
   /**
    * <code>optional uint32 co2_used = 7;</code>
    *
    * <pre>
    * CO2 Used (grams)
    * </pre>
    */
   public Builder setCo2Used(int value) {
     bitField0_ |= 0x00000040;
     co2Used_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 co2_used = 7;</code>
    *
    * <pre>
    * CO2 Used (grams)
    * </pre>
    */
   public Builder clearCo2Used() {
     bitField0_ = (bitField0_ & ~0x00000040);
     co2Used_ = 0;
     onChanged();
     return this;
   }

   private int fuelMc1_ ;
   /**
    * <code>optional uint32 fuel_mc1 = 8;</code>
    *
    * <pre>
    * Fuel MC1
    * </pre>
    */
   public boolean hasFuelMc1() {
     return ((bitField0_ & 0x00000080) == 0x00000080);
   }
   /**
    * <code>optional uint32 fuel_mc1 = 8;</code>
    *
    * <pre>
    * Fuel MC1
    * </pre>
    */
   public int getFuelMc1() {
     return fuelMc1_;
   }
   /**
    * <code>optional uint32 fuel_mc1 = 8;</code>
    *
    * <pre>
    * Fuel MC1
    * </pre>
    */
   public Builder setFuelMc1(int value) {
     bitField0_ |= 0x00000080;
     fuelMc1_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 fuel_mc1 = 8;</code>
    *
    * <pre>
    * Fuel MC1
    * </pre>
    */
   public Builder clearFuelMc1() {
     bitField0_ = (bitField0_ & ~0x00000080);
     fuelMc1_ = 0;
     onChanged();
     return this;
   }

   private int fuelIdle_ ;
   /**
    * <code>optional uint32 fuel_idle = 9;</code>
    *
    * <pre>
    * Fuel idle
    * </pre>
    */
   public boolean hasFuelIdle() {
     return ((bitField0_ & 0x00000100) == 0x00000100);
   }
   /**
    * <code>optional uint32 fuel_idle = 9;</code>
    *
    * <pre>
    * Fuel idle
    * </pre>
    */
   public int getFuelIdle() {
     return fuelIdle_;
   }
   /**
    * <code>optional uint32 fuel_idle = 9;</code>
    *
    * <pre>
    * Fuel idle
    * </pre>
    */
   public Builder setFuelIdle(int value) {
     bitField0_ |= 0x00000100;
     fuelIdle_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 fuel_idle = 9;</code>
    *
    * <pre>
    * Fuel idle
    * </pre>
    */
   public Builder clearFuelIdle() {
     bitField0_ = (bitField0_ & ~0x00000100);
     fuelIdle_ = 0;
     onChanged();
     return this;
   }

   private int numberOfStops_ ;
   /**
    * <code>optional uint32 number_of_stops = 10;</code>
    *
    * <pre>
    * Number of stops 
    * </pre>
    */
   public boolean hasNumberOfStops() {
     return ((bitField0_ & 0x00000200) == 0x00000200);
   }
   /**
    * <code>optional uint32 number_of_stops = 10;</code>
    *
    * <pre>
    * Number of stops 
    * </pre>
    */
   public int getNumberOfStops() {
     return numberOfStops_;
   }
   /**
    * <code>optional uint32 number_of_stops = 10;</code>
    *
    * <pre>
    * Number of stops 
    * </pre>
    */
   public Builder setNumberOfStops(int value) {
     bitField0_ |= 0x00000200;
     numberOfStops_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 number_of_stops = 10;</code>
    *
    * <pre>
    * Number of stops 
    * </pre>
    */
   public Builder clearNumberOfStops() {
     bitField0_ = (bitField0_ & ~0x00000200);
     numberOfStops_ = 0;
     onChanged();
     return this;
   }

   private int confidence_ ;
   /**
    * <code>optional uint32 confidence = 11;</code>
    *
    * <pre>
    * Confidence
    * </pre>
    */
   public boolean hasConfidence() {
     return ((bitField0_ & 0x00000400) == 0x00000400);
   }
   /**
    * <code>optional uint32 confidence = 11;</code>
    *
    * <pre>
    * Confidence
    * </pre>
    */
   public int getConfidence() {
     return confidence_;
   }
   /**
    * <code>optional uint32 confidence = 11;</code>
    *
    * <pre>
    * Confidence
    * </pre>
    */
   public Builder setConfidence(int value) {
     bitField0_ |= 0x00000400;
     confidence_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 confidence = 11;</code>
    *
    * <pre>
    * Confidence
    * </pre>
    */
   public Builder clearConfidence() {
     bitField0_ = (bitField0_ & ~0x00000400);
     confidence_ = 0;
     onChanged();
     return this;
   }

   // @@protoc_insertion_point(builder_scope:Consumption)
 }

 static {
   defaultInstance = new Consumption(true);
   defaultInstance.initFields();
 }

 // @@protoc_insertion_point(class_scope:Consumption)
}

private static final com.google.protobuf.Descriptors.Descriptor
 internal_static_Consumption_descriptor;
private static
 com.google.protobuf.GeneratedMessage.FieldAccessorTable
   internal_static_Consumption_fieldAccessorTable;

public static com.google.protobuf.Descriptors.FileDescriptor
   getDescriptor() {
 return descriptor;
}
private static com.google.protobuf.Descriptors.FileDescriptor
   descriptor;
static {
 java.lang.String[] descriptorData = {
   "\n\026ConsumptionProto.proto\032\026EventHeaderPro" +
   "to.proto\032\"Enums/ConsumptionReasonProto.p" +
   "roto\032$Enums/ConsumptionFuelTypeProto.pro" +
   "to\"\334\002\n\013Consumption\022\034\n\006header\030\001 \002(\0132\014.Eve" +
   "ntHeader\022C\n\006reason\030\002 \001(\0162\022.ConsumptionRe" +
   "ason:\037CONSUMPTION_REASON_CO2_TRIP_END\022E\n" +
   "\tfuel_type\030\003 \001(\0162\024.ConsumptionFuelType:\034" +
   "CONSUMPTION_FUEL_TYPE_PETROL\022\021\n\tidle_tim" +
   "e\030\004 \001(\r\022\025\n\rtrip_duration\030\005 \001(\r\022\025\n\rtrip_d" +
   "istance\030\006 \001(\r\022\020\n\010co2_used\030\007 \001(\r\022\020\n\010fuel_",
   "mc1\030\010 \001(\r\022\021\n\tfuel_idle\030\t \001(\r\022\027\n\017number_o" +
   "f_stops\030\n \001(\r\022\022\n\nconfidence\030\013 \001(\r"
 };
 com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
     new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
       public com.google.protobuf.ExtensionRegistry assignDescriptors(
           com.google.protobuf.Descriptors.FileDescriptor root) {
         descriptor = root;
         return null;
       }
     };
 com.google.protobuf.Descriptors.FileDescriptor
   .internalBuildGeneratedFileFrom(descriptorData,
     new com.google.protobuf.Descriptors.FileDescriptor[] {
       EventHeaderProto.getDescriptor(),
       ConsumptionReasonProto.getDescriptor(),
       ConsumptionFuelTypeProto.getDescriptor(),
     }, assigner);
 internal_static_Consumption_descriptor =
   getDescriptor().getMessageTypes().get(0);
 internal_static_Consumption_fieldAccessorTable = new
   com.google.protobuf.GeneratedMessage.FieldAccessorTable(
     internal_static_Consumption_descriptor,
     new java.lang.String[] { "Header", "Reason", "FuelType", "IdleTime", "TripDuration", "TripDistance", "Co2Used", "FuelMc1", "FuelIdle", "NumberOfStops", "Confidence", });
 EventHeaderProto.getDescriptor();
 ConsumptionReasonProto.getDescriptor();
 ConsumptionFuelTypeProto.getDescriptor();
}

// @@protoc_insertion_point(outer_class_scope)
}
