package scopeProto;

//Generated by the protocol buffer compiler.  DO NOT EDIT!
//source: AccidentAnalysisClassificationEventProto.proto

public final class AccidentAnalysisClassificationEventProto {
private AccidentAnalysisClassificationEventProto() {}
public static void registerAllExtensions(
   com.google.protobuf.ExtensionRegistry registry) {
}
public interface AccidentAnalysisClassificationEventOrBuilder extends
   // @@protoc_insertion_point(interface_extends:AccidentAnalysisClassificationEvent)
   com.google.protobuf.MessageOrBuilder {

 /**
  * <code>required .EventHeader header = 1;</code>
  */
 boolean hasHeader();
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 EventHeaderProto.EventHeader getHeader();
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 EventHeaderProto.EventHeaderOrBuilder getHeaderOrBuilder();

 /**
  * <code>optional float current_accelerometer_x = 2;</code>
  *
  * <pre>
  * Current accelerometer X-Axis
  * </pre>
  */
 boolean hasCurrentAccelerometerX();
 /**
  * <code>optional float current_accelerometer_x = 2;</code>
  *
  * <pre>
  * Current accelerometer X-Axis
  * </pre>
  */
 float getCurrentAccelerometerX();

 /**
  * <code>optional float current_accelerometer_y = 3;</code>
  *
  * <pre>
  * Current accelerometer Y-Axis
  * </pre>
  */
 boolean hasCurrentAccelerometerY();
 /**
  * <code>optional float current_accelerometer_y = 3;</code>
  *
  * <pre>
  * Current accelerometer Y-Axis
  * </pre>
  */
 float getCurrentAccelerometerY();

 /**
  * <code>optional float current_accelerometer_z = 4;</code>
  *
  * <pre>
  * Current accelerometer Z-Axis
  * </pre>
  */
 boolean hasCurrentAccelerometerZ();
 /**
  * <code>optional float current_accelerometer_z = 4;</code>
  *
  * <pre>
  * Current accelerometer Z-Axis
  * </pre>
  */
 float getCurrentAccelerometerZ();

 /**
  * <code>optional uint32 accident_classification_number = 5;</code>
  *
  * <pre>
  * Accident classification number
  * </pre>
  */
 boolean hasAccidentClassificationNumber();
 /**
  * <code>optional uint32 accident_classification_number = 5;</code>
  *
  * <pre>
  * Accident classification number
  * </pre>
  */
 int getAccidentClassificationNumber();

 /**
  * <code>optional uint32 total_number_of_impacts = 6;</code>
  *
  * <pre>
  * Total number of impacts
  * </pre>
  */
 boolean hasTotalNumberOfImpacts();
 /**
  * <code>optional uint32 total_number_of_impacts = 6;</code>
  *
  * <pre>
  * Total number of impacts
  * </pre>
  */
 int getTotalNumberOfImpacts();

 /**
  * <code>optional uint32 number_of_low_impacts = 7;</code>
  *
  * <pre>
  * Number of low impacts
  * </pre>
  */
 boolean hasNumberOfLowImpacts();
 /**
  * <code>optional uint32 number_of_low_impacts = 7;</code>
  *
  * <pre>
  * Number of low impacts
  * </pre>
  */
 int getNumberOfLowImpacts();

 /**
  * <code>optional uint32 number_of_high_impacts = 8;</code>
  *
  * <pre>
  * Number of high impacts
  * </pre>
  */
 boolean hasNumberOfHighImpacts();
 /**
  * <code>optional uint32 number_of_high_impacts = 8;</code>
  *
  * <pre>
  * Number of high impacts
  * </pre>
  */
 int getNumberOfHighImpacts();

 /**
  * <code>optional uint32 number_of_frontal_impacts = 9;</code>
  *
  * <pre>
  * Number of frontal impacts
  * </pre>
  */
 boolean hasNumberOfFrontalImpacts();
 /**
  * <code>optional uint32 number_of_frontal_impacts = 9;</code>
  *
  * <pre>
  * Number of frontal impacts
  * </pre>
  */
 int getNumberOfFrontalImpacts();

 /**
  * <code>optional uint32 number_of_rear_impacts = 10;</code>
  *
  * <pre>
  * Number of rear impacts
  * </pre>
  */
 boolean hasNumberOfRearImpacts();
 /**
  * <code>optional uint32 number_of_rear_impacts = 10;</code>
  *
  * <pre>
  * Number of rear impacts
  * </pre>
  */
 int getNumberOfRearImpacts();

 /**
  * <code>optional uint32 number_of_side_impacts = 11;</code>
  *
  * <pre>
  * Number of side impacts
  * </pre>
  */
 boolean hasNumberOfSideImpacts();
 /**
  * <code>optional uint32 number_of_side_impacts = 11;</code>
  *
  * <pre>
  * Number of side impacts
  * </pre>
  */
 int getNumberOfSideImpacts();

 /**
  * <code>optional uint32 number_of_corner_impacts = 12;</code>
  *
  * <pre>
  * Number of corner impacts
  * </pre>
  */
 boolean hasNumberOfCornerImpacts();
 /**
  * <code>optional uint32 number_of_corner_impacts = 12;</code>
  *
  * <pre>
  * Number of corner impacts
  * </pre>
  */
 int getNumberOfCornerImpacts();

 /**
  * <code>optional uint32 stationary_time_seconds = 13;</code>
  *
  * <pre>
  * Stationary time in seconds
  * </pre>
  */
 boolean hasStationaryTimeSeconds();
 /**
  * <code>optional uint32 stationary_time_seconds = 13;</code>
  *
  * <pre>
  * Stationary time in seconds
  * </pre>
  */
 int getStationaryTimeSeconds();

 /**
  * <code>optional .AccidentAnalysisClassificationAssistanceType AssistanceType = 14 [default = ACCIDENT_ANALYSIS_CLASSIFICATION_ASSISTANCE_NOTHING];</code>
  *
  * <pre>
  * Assistance type (0 - nothing, 1 - call, 2-ambulance)
  * </pre>
  */
 boolean hasAssistanceType();
 /**
  * <code>optional .AccidentAnalysisClassificationAssistanceType AssistanceType = 14 [default = ACCIDENT_ANALYSIS_CLASSIFICATION_ASSISTANCE_NOTHING];</code>
  *
  * <pre>
  * Assistance type (0 - nothing, 1 - call, 2-ambulance)
  * </pre>
  */
 AccidentAnalysisClassificationAssistanceTypeProto.AccidentAnalysisClassificationAssistanceType getAssistanceType();
}
/**
* Protobuf type {@code AccidentAnalysisClassificationEvent}
*
* <pre>
* Accident Analysis - Accident Classification event
* </pre>
*/
public static final class AccidentAnalysisClassificationEvent extends
   com.google.protobuf.GeneratedMessage implements
   // @@protoc_insertion_point(message_implements:AccidentAnalysisClassificationEvent)
   AccidentAnalysisClassificationEventOrBuilder {
 // Use AccidentAnalysisClassificationEvent.newBuilder() to construct.
 private AccidentAnalysisClassificationEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
   super(builder);
   this.unknownFields = builder.getUnknownFields();
 }
 private AccidentAnalysisClassificationEvent(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

 private static final AccidentAnalysisClassificationEvent defaultInstance;
 public static AccidentAnalysisClassificationEvent getDefaultInstance() {
   return defaultInstance;
 }

 public AccidentAnalysisClassificationEvent getDefaultInstanceForType() {
   return defaultInstance;
 }

 private final com.google.protobuf.UnknownFieldSet unknownFields;
 @java.lang.Override
 public final com.google.protobuf.UnknownFieldSet
     getUnknownFields() {
   return this.unknownFields;
 }
 private AccidentAnalysisClassificationEvent(
     com.google.protobuf.CodedInputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   initFields();
   int mutable_bitField0_ = 0;
   com.google.protobuf.UnknownFieldSet.Builder unknownFields =
       com.google.protobuf.UnknownFieldSet.newBuilder();
   try {
     boolean done = false;
     while (!done) {
       int tag = input.readTag();
       switch (tag) {
         case 0:
           done = true;
           break;
         default: {
           if (!parseUnknownField(input, unknownFields,
                                  extensionRegistry, tag)) {
             done = true;
           }
           break;
         }
         case 10: {
           EventHeaderProto.EventHeader.Builder subBuilder = null;
           if (((bitField0_ & 0x00000001) == 0x00000001)) {
             subBuilder = header_.toBuilder();
           }
           header_ = input.readMessage(EventHeaderProto.EventHeader.PARSER, extensionRegistry);
           if (subBuilder != null) {
             subBuilder.mergeFrom(header_);
             header_ = subBuilder.buildPartial();
           }
           bitField0_ |= 0x00000001;
           break;
         }
         case 21: {
           bitField0_ |= 0x00000002;
           currentAccelerometerX_ = input.readFloat();
           break;
         }
         case 29: {
           bitField0_ |= 0x00000004;
           currentAccelerometerY_ = input.readFloat();
           break;
         }
         case 37: {
           bitField0_ |= 0x00000008;
           currentAccelerometerZ_ = input.readFloat();
           break;
         }
         case 40: {
           bitField0_ |= 0x00000010;
           accidentClassificationNumber_ = input.readUInt32();
           break;
         }
         case 48: {
           bitField0_ |= 0x00000020;
           totalNumberOfImpacts_ = input.readUInt32();
           break;
         }
         case 56: {
           bitField0_ |= 0x00000040;
           numberOfLowImpacts_ = input.readUInt32();
           break;
         }
         case 64: {
           bitField0_ |= 0x00000080;
           numberOfHighImpacts_ = input.readUInt32();
           break;
         }
         case 72: {
           bitField0_ |= 0x00000100;
           numberOfFrontalImpacts_ = input.readUInt32();
           break;
         }
         case 80: {
           bitField0_ |= 0x00000200;
           numberOfRearImpacts_ = input.readUInt32();
           break;
         }
         case 88: {
           bitField0_ |= 0x00000400;
           numberOfSideImpacts_ = input.readUInt32();
           break;
         }
         case 96: {
           bitField0_ |= 0x00000800;
           numberOfCornerImpacts_ = input.readUInt32();
           break;
         }
         case 104: {
           bitField0_ |= 0x00001000;
           stationaryTimeSeconds_ = input.readUInt32();
           break;
         }
         case 112: {
           int rawValue = input.readEnum();
           AccidentAnalysisClassificationAssistanceTypeProto.AccidentAnalysisClassificationAssistanceType value = AccidentAnalysisClassificationAssistanceTypeProto.AccidentAnalysisClassificationAssistanceType.valueOf(rawValue);
           if (value == null) {
             unknownFields.mergeVarintField(14, rawValue);
           } else {
             bitField0_ |= 0x00002000;
             assistanceType_ = value;
           }
           break;
         }
       }
     }
   } catch (com.google.protobuf.InvalidProtocolBufferException e) {
     throw e.setUnfinishedMessage(this);
   } catch (java.io.IOException e) {
     throw new com.google.protobuf.InvalidProtocolBufferException(
         e.getMessage()).setUnfinishedMessage(this);
   } finally {
     this.unknownFields = unknownFields.build();
     makeExtensionsImmutable();
   }
 }
 public static final com.google.protobuf.Descriptors.Descriptor
     getDescriptor() {
   return AccidentAnalysisClassificationEventProto.internal_static_AccidentAnalysisClassificationEvent_descriptor;
 }

 protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
     internalGetFieldAccessorTable() {
   return AccidentAnalysisClassificationEventProto.internal_static_AccidentAnalysisClassificationEvent_fieldAccessorTable
       .ensureFieldAccessorsInitialized(
           AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent.class, AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent.Builder.class);
 }

 public static com.google.protobuf.Parser<AccidentAnalysisClassificationEvent> PARSER =
     new com.google.protobuf.AbstractParser<AccidentAnalysisClassificationEvent>() {
   public AccidentAnalysisClassificationEvent parsePartialFrom(
       com.google.protobuf.CodedInputStream input,
       com.google.protobuf.ExtensionRegistryLite extensionRegistry)
       throws com.google.protobuf.InvalidProtocolBufferException {
     return new AccidentAnalysisClassificationEvent(input, extensionRegistry);
   }
 };

 @java.lang.Override
 public com.google.protobuf.Parser<AccidentAnalysisClassificationEvent> getParserForType() {
   return PARSER;
 }

 private int bitField0_;
 public static final int HEADER_FIELD_NUMBER = 1;
 private EventHeaderProto.EventHeader header_;
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 public boolean hasHeader() {
   return ((bitField0_ & 0x00000001) == 0x00000001);
 }
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 public EventHeaderProto.EventHeader getHeader() {
   return header_;
 }
 /**
  * <code>required .EventHeader header = 1;</code>
  */
 public EventHeaderProto.EventHeaderOrBuilder getHeaderOrBuilder() {
   return header_;
 }

 public static final int CURRENT_ACCELEROMETER_X_FIELD_NUMBER = 2;
 private float currentAccelerometerX_;
 /**
  * <code>optional float current_accelerometer_x = 2;</code>
  *
  * <pre>
  * Current accelerometer X-Axis
  * </pre>
  */
 public boolean hasCurrentAccelerometerX() {
   return ((bitField0_ & 0x00000002) == 0x00000002);
 }
 /**
  * <code>optional float current_accelerometer_x = 2;</code>
  *
  * <pre>
  * Current accelerometer X-Axis
  * </pre>
  */
 public float getCurrentAccelerometerX() {
   return currentAccelerometerX_;
 }

 public static final int CURRENT_ACCELEROMETER_Y_FIELD_NUMBER = 3;
 private float currentAccelerometerY_;
 /**
  * <code>optional float current_accelerometer_y = 3;</code>
  *
  * <pre>
  * Current accelerometer Y-Axis
  * </pre>
  */
 public boolean hasCurrentAccelerometerY() {
   return ((bitField0_ & 0x00000004) == 0x00000004);
 }
 /**
  * <code>optional float current_accelerometer_y = 3;</code>
  *
  * <pre>
  * Current accelerometer Y-Axis
  * </pre>
  */
 public float getCurrentAccelerometerY() {
   return currentAccelerometerY_;
 }

 public static final int CURRENT_ACCELEROMETER_Z_FIELD_NUMBER = 4;
 private float currentAccelerometerZ_;
 /**
  * <code>optional float current_accelerometer_z = 4;</code>
  *
  * <pre>
  * Current accelerometer Z-Axis
  * </pre>
  */
 public boolean hasCurrentAccelerometerZ() {
   return ((bitField0_ & 0x00000008) == 0x00000008);
 }
 /**
  * <code>optional float current_accelerometer_z = 4;</code>
  *
  * <pre>
  * Current accelerometer Z-Axis
  * </pre>
  */
 public float getCurrentAccelerometerZ() {
   return currentAccelerometerZ_;
 }

 public static final int ACCIDENT_CLASSIFICATION_NUMBER_FIELD_NUMBER = 5;
 private int accidentClassificationNumber_;
 /**
  * <code>optional uint32 accident_classification_number = 5;</code>
  *
  * <pre>
  * Accident classification number
  * </pre>
  */
 public boolean hasAccidentClassificationNumber() {
   return ((bitField0_ & 0x00000010) == 0x00000010);
 }
 /**
  * <code>optional uint32 accident_classification_number = 5;</code>
  *
  * <pre>
  * Accident classification number
  * </pre>
  */
 public int getAccidentClassificationNumber() {
   return accidentClassificationNumber_;
 }

 public static final int TOTAL_NUMBER_OF_IMPACTS_FIELD_NUMBER = 6;
 private int totalNumberOfImpacts_;
 /**
  * <code>optional uint32 total_number_of_impacts = 6;</code>
  *
  * <pre>
  * Total number of impacts
  * </pre>
  */
 public boolean hasTotalNumberOfImpacts() {
   return ((bitField0_ & 0x00000020) == 0x00000020);
 }
 /**
  * <code>optional uint32 total_number_of_impacts = 6;</code>
  *
  * <pre>
  * Total number of impacts
  * </pre>
  */
 public int getTotalNumberOfImpacts() {
   return totalNumberOfImpacts_;
 }

 public static final int NUMBER_OF_LOW_IMPACTS_FIELD_NUMBER = 7;
 private int numberOfLowImpacts_;
 /**
  * <code>optional uint32 number_of_low_impacts = 7;</code>
  *
  * <pre>
  * Number of low impacts
  * </pre>
  */
 public boolean hasNumberOfLowImpacts() {
   return ((bitField0_ & 0x00000040) == 0x00000040);
 }
 /**
  * <code>optional uint32 number_of_low_impacts = 7;</code>
  *
  * <pre>
  * Number of low impacts
  * </pre>
  */
 public int getNumberOfLowImpacts() {
   return numberOfLowImpacts_;
 }

 public static final int NUMBER_OF_HIGH_IMPACTS_FIELD_NUMBER = 8;
 private int numberOfHighImpacts_;
 /**
  * <code>optional uint32 number_of_high_impacts = 8;</code>
  *
  * <pre>
  * Number of high impacts
  * </pre>
  */
 public boolean hasNumberOfHighImpacts() {
   return ((bitField0_ & 0x00000080) == 0x00000080);
 }
 /**
  * <code>optional uint32 number_of_high_impacts = 8;</code>
  *
  * <pre>
  * Number of high impacts
  * </pre>
  */
 public int getNumberOfHighImpacts() {
   return numberOfHighImpacts_;
 }

 public static final int NUMBER_OF_FRONTAL_IMPACTS_FIELD_NUMBER = 9;
 private int numberOfFrontalImpacts_;
 /**
  * <code>optional uint32 number_of_frontal_impacts = 9;</code>
  *
  * <pre>
  * Number of frontal impacts
  * </pre>
  */
 public boolean hasNumberOfFrontalImpacts() {
   return ((bitField0_ & 0x00000100) == 0x00000100);
 }
 /**
  * <code>optional uint32 number_of_frontal_impacts = 9;</code>
  *
  * <pre>
  * Number of frontal impacts
  * </pre>
  */
 public int getNumberOfFrontalImpacts() {
   return numberOfFrontalImpacts_;
 }

 public static final int NUMBER_OF_REAR_IMPACTS_FIELD_NUMBER = 10;
 private int numberOfRearImpacts_;
 /**
  * <code>optional uint32 number_of_rear_impacts = 10;</code>
  *
  * <pre>
  * Number of rear impacts
  * </pre>
  */
 public boolean hasNumberOfRearImpacts() {
   return ((bitField0_ & 0x00000200) == 0x00000200);
 }
 /**
  * <code>optional uint32 number_of_rear_impacts = 10;</code>
  *
  * <pre>
  * Number of rear impacts
  * </pre>
  */
 public int getNumberOfRearImpacts() {
   return numberOfRearImpacts_;
 }

 public static final int NUMBER_OF_SIDE_IMPACTS_FIELD_NUMBER = 11;
 private int numberOfSideImpacts_;
 /**
  * <code>optional uint32 number_of_side_impacts = 11;</code>
  *
  * <pre>
  * Number of side impacts
  * </pre>
  */
 public boolean hasNumberOfSideImpacts() {
   return ((bitField0_ & 0x00000400) == 0x00000400);
 }
 /**
  * <code>optional uint32 number_of_side_impacts = 11;</code>
  *
  * <pre>
  * Number of side impacts
  * </pre>
  */
 public int getNumberOfSideImpacts() {
   return numberOfSideImpacts_;
 }

 public static final int NUMBER_OF_CORNER_IMPACTS_FIELD_NUMBER = 12;
 private int numberOfCornerImpacts_;
 /**
  * <code>optional uint32 number_of_corner_impacts = 12;</code>
  *
  * <pre>
  * Number of corner impacts
  * </pre>
  */
 public boolean hasNumberOfCornerImpacts() {
   return ((bitField0_ & 0x00000800) == 0x00000800);
 }
 /**
  * <code>optional uint32 number_of_corner_impacts = 12;</code>
  *
  * <pre>
  * Number of corner impacts
  * </pre>
  */
 public int getNumberOfCornerImpacts() {
   return numberOfCornerImpacts_;
 }

 public static final int STATIONARY_TIME_SECONDS_FIELD_NUMBER = 13;
 private int stationaryTimeSeconds_;
 /**
  * <code>optional uint32 stationary_time_seconds = 13;</code>
  *
  * <pre>
  * Stationary time in seconds
  * </pre>
  */
 public boolean hasStationaryTimeSeconds() {
   return ((bitField0_ & 0x00001000) == 0x00001000);
 }
 /**
  * <code>optional uint32 stationary_time_seconds = 13;</code>
  *
  * <pre>
  * Stationary time in seconds
  * </pre>
  */
 public int getStationaryTimeSeconds() {
   return stationaryTimeSeconds_;
 }

 public static final int ASSISTANCETYPE_FIELD_NUMBER = 14;
 private AccidentAnalysisClassificationAssistanceTypeProto.AccidentAnalysisClassificationAssistanceType assistanceType_;
 /**
  * <code>optional .AccidentAnalysisClassificationAssistanceType AssistanceType = 14 [default = ACCIDENT_ANALYSIS_CLASSIFICATION_ASSISTANCE_NOTHING];</code>
  *
  * <pre>
  * Assistance type (0 - nothing, 1 - call, 2-ambulance)
  * </pre>
  */
 public boolean hasAssistanceType() {
   return ((bitField0_ & 0x00002000) == 0x00002000);
 }
 /**
  * <code>optional .AccidentAnalysisClassificationAssistanceType AssistanceType = 14 [default = ACCIDENT_ANALYSIS_CLASSIFICATION_ASSISTANCE_NOTHING];</code>
  *
  * <pre>
  * Assistance type (0 - nothing, 1 - call, 2-ambulance)
  * </pre>
  */
 public AccidentAnalysisClassificationAssistanceTypeProto.AccidentAnalysisClassificationAssistanceType getAssistanceType() {
   return assistanceType_;
 }

 private void initFields() {
   header_ = EventHeaderProto.EventHeader.getDefaultInstance();
   currentAccelerometerX_ = 0F;
   currentAccelerometerY_ = 0F;
   currentAccelerometerZ_ = 0F;
   accidentClassificationNumber_ = 0;
   totalNumberOfImpacts_ = 0;
   numberOfLowImpacts_ = 0;
   numberOfHighImpacts_ = 0;
   numberOfFrontalImpacts_ = 0;
   numberOfRearImpacts_ = 0;
   numberOfSideImpacts_ = 0;
   numberOfCornerImpacts_ = 0;
   stationaryTimeSeconds_ = 0;
   assistanceType_ = AccidentAnalysisClassificationAssistanceTypeProto.AccidentAnalysisClassificationAssistanceType.ACCIDENT_ANALYSIS_CLASSIFICATION_ASSISTANCE_NOTHING;
 }
 private byte memoizedIsInitialized = -1;
 public final boolean isInitialized() {
   byte isInitialized = memoizedIsInitialized;
   if (isInitialized == 1) return true;
   if (isInitialized == 0) return false;

   if (!hasHeader()) {
     memoizedIsInitialized = 0;
     return false;
   }
   if (!getHeader().isInitialized()) {
     memoizedIsInitialized = 0;
     return false;
   }
   memoizedIsInitialized = 1;
   return true;
 }

 public void writeTo(com.google.protobuf.CodedOutputStream output)
                     throws java.io.IOException {
   getSerializedSize();
   if (((bitField0_ & 0x00000001) == 0x00000001)) {
     output.writeMessage(1, header_);
   }
   if (((bitField0_ & 0x00000002) == 0x00000002)) {
     output.writeFloat(2, currentAccelerometerX_);
   }
   if (((bitField0_ & 0x00000004) == 0x00000004)) {
     output.writeFloat(3, currentAccelerometerY_);
   }
   if (((bitField0_ & 0x00000008) == 0x00000008)) {
     output.writeFloat(4, currentAccelerometerZ_);
   }
   if (((bitField0_ & 0x00000010) == 0x00000010)) {
     output.writeUInt32(5, accidentClassificationNumber_);
   }
   if (((bitField0_ & 0x00000020) == 0x00000020)) {
     output.writeUInt32(6, totalNumberOfImpacts_);
   }
   if (((bitField0_ & 0x00000040) == 0x00000040)) {
     output.writeUInt32(7, numberOfLowImpacts_);
   }
   if (((bitField0_ & 0x00000080) == 0x00000080)) {
     output.writeUInt32(8, numberOfHighImpacts_);
   }
   if (((bitField0_ & 0x00000100) == 0x00000100)) {
     output.writeUInt32(9, numberOfFrontalImpacts_);
   }
   if (((bitField0_ & 0x00000200) == 0x00000200)) {
     output.writeUInt32(10, numberOfRearImpacts_);
   }
   if (((bitField0_ & 0x00000400) == 0x00000400)) {
     output.writeUInt32(11, numberOfSideImpacts_);
   }
   if (((bitField0_ & 0x00000800) == 0x00000800)) {
     output.writeUInt32(12, numberOfCornerImpacts_);
   }
   if (((bitField0_ & 0x00001000) == 0x00001000)) {
     output.writeUInt32(13, stationaryTimeSeconds_);
   }
   if (((bitField0_ & 0x00002000) == 0x00002000)) {
     output.writeEnum(14, assistanceType_.getNumber());
   }
   getUnknownFields().writeTo(output);
 }

 private int memoizedSerializedSize = -1;
 public int getSerializedSize() {
   int size = memoizedSerializedSize;
   if (size != -1) return size;

   size = 0;
   if (((bitField0_ & 0x00000001) == 0x00000001)) {
     size += com.google.protobuf.CodedOutputStream
       .computeMessageSize(1, header_);
   }
   if (((bitField0_ & 0x00000002) == 0x00000002)) {
     size += com.google.protobuf.CodedOutputStream
       .computeFloatSize(2, currentAccelerometerX_);
   }
   if (((bitField0_ & 0x00000004) == 0x00000004)) {
     size += com.google.protobuf.CodedOutputStream
       .computeFloatSize(3, currentAccelerometerY_);
   }
   if (((bitField0_ & 0x00000008) == 0x00000008)) {
     size += com.google.protobuf.CodedOutputStream
       .computeFloatSize(4, currentAccelerometerZ_);
   }
   if (((bitField0_ & 0x00000010) == 0x00000010)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(5, accidentClassificationNumber_);
   }
   if (((bitField0_ & 0x00000020) == 0x00000020)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(6, totalNumberOfImpacts_);
   }
   if (((bitField0_ & 0x00000040) == 0x00000040)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(7, numberOfLowImpacts_);
   }
   if (((bitField0_ & 0x00000080) == 0x00000080)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(8, numberOfHighImpacts_);
   }
   if (((bitField0_ & 0x00000100) == 0x00000100)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(9, numberOfFrontalImpacts_);
   }
   if (((bitField0_ & 0x00000200) == 0x00000200)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(10, numberOfRearImpacts_);
   }
   if (((bitField0_ & 0x00000400) == 0x00000400)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(11, numberOfSideImpacts_);
   }
   if (((bitField0_ & 0x00000800) == 0x00000800)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(12, numberOfCornerImpacts_);
   }
   if (((bitField0_ & 0x00001000) == 0x00001000)) {
     size += com.google.protobuf.CodedOutputStream
       .computeUInt32Size(13, stationaryTimeSeconds_);
   }
   if (((bitField0_ & 0x00002000) == 0x00002000)) {
     size += com.google.protobuf.CodedOutputStream
       .computeEnumSize(14, assistanceType_.getNumber());
   }
   size += getUnknownFields().getSerializedSize();
   memoizedSerializedSize = size;
   return size;
 }

 private static final long serialVersionUID = 0L;
 @java.lang.Override
 protected java.lang.Object writeReplace()
     throws java.io.ObjectStreamException {
   return super.writeReplace();
 }

 public static AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent parseFrom(
     com.google.protobuf.ByteString data)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data);
 }
 public static AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent parseFrom(
     com.google.protobuf.ByteString data,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data, extensionRegistry);
 }
 public static AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent parseFrom(byte[] data)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data);
 }
 public static AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent parseFrom(
     byte[] data,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws com.google.protobuf.InvalidProtocolBufferException {
   return PARSER.parseFrom(data, extensionRegistry);
 }
 public static AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent parseFrom(java.io.InputStream input)
     throws java.io.IOException {
   return PARSER.parseFrom(input);
 }
 public static AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent parseFrom(
     java.io.InputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseFrom(input, extensionRegistry);
 }
 public static AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent parseDelimitedFrom(java.io.InputStream input)
     throws java.io.IOException {
   return PARSER.parseDelimitedFrom(input);
 }
 public static AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent parseDelimitedFrom(
     java.io.InputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseDelimitedFrom(input, extensionRegistry);
 }
 public static AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent parseFrom(
     com.google.protobuf.CodedInputStream input)
     throws java.io.IOException {
   return PARSER.parseFrom(input);
 }
 public static AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent parseFrom(
     com.google.protobuf.CodedInputStream input,
     com.google.protobuf.ExtensionRegistryLite extensionRegistry)
     throws java.io.IOException {
   return PARSER.parseFrom(input, extensionRegistry);
 }

 public static Builder newBuilder() { return Builder.create(); }
 public Builder newBuilderForType() { return newBuilder(); }
 public static Builder newBuilder(AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent prototype) {
   return newBuilder().mergeFrom(prototype);
 }
 public Builder toBuilder() { return newBuilder(this); }

 @java.lang.Override
 protected Builder newBuilderForType(
     com.google.protobuf.GeneratedMessage.BuilderParent parent) {
   Builder builder = new Builder(parent);
   return builder;
 }
 /**
  * Protobuf type {@code AccidentAnalysisClassificationEvent}
  *
  * <pre>
  * Accident Analysis - Accident Classification event
  * </pre>
  */
 public static final class Builder extends
     com.google.protobuf.GeneratedMessage.Builder<Builder> implements
     // @@protoc_insertion_point(builder_implements:AccidentAnalysisClassificationEvent)
     AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEventOrBuilder {
   public static final com.google.protobuf.Descriptors.Descriptor
       getDescriptor() {
     return AccidentAnalysisClassificationEventProto.internal_static_AccidentAnalysisClassificationEvent_descriptor;
   }

   protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
       internalGetFieldAccessorTable() {
     return AccidentAnalysisClassificationEventProto.internal_static_AccidentAnalysisClassificationEvent_fieldAccessorTable
         .ensureFieldAccessorsInitialized(
             AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent.class, AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent.Builder.class);
   }

   // Construct using AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent.newBuilder()
   private Builder() {
     maybeForceBuilderInitialization();
   }

   private Builder(
       com.google.protobuf.GeneratedMessage.BuilderParent parent) {
     super(parent);
     maybeForceBuilderInitialization();
   }
   private void maybeForceBuilderInitialization() {
     if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
       getHeaderFieldBuilder();
     }
   }
   private static Builder create() {
     return new Builder();
   }

   public Builder clear() {
     super.clear();
     if (headerBuilder_ == null) {
       header_ = EventHeaderProto.EventHeader.getDefaultInstance();
     } else {
       headerBuilder_.clear();
     }
     bitField0_ = (bitField0_ & ~0x00000001);
     currentAccelerometerX_ = 0F;
     bitField0_ = (bitField0_ & ~0x00000002);
     currentAccelerometerY_ = 0F;
     bitField0_ = (bitField0_ & ~0x00000004);
     currentAccelerometerZ_ = 0F;
     bitField0_ = (bitField0_ & ~0x00000008);
     accidentClassificationNumber_ = 0;
     bitField0_ = (bitField0_ & ~0x00000010);
     totalNumberOfImpacts_ = 0;
     bitField0_ = (bitField0_ & ~0x00000020);
     numberOfLowImpacts_ = 0;
     bitField0_ = (bitField0_ & ~0x00000040);
     numberOfHighImpacts_ = 0;
     bitField0_ = (bitField0_ & ~0x00000080);
     numberOfFrontalImpacts_ = 0;
     bitField0_ = (bitField0_ & ~0x00000100);
     numberOfRearImpacts_ = 0;
     bitField0_ = (bitField0_ & ~0x00000200);
     numberOfSideImpacts_ = 0;
     bitField0_ = (bitField0_ & ~0x00000400);
     numberOfCornerImpacts_ = 0;
     bitField0_ = (bitField0_ & ~0x00000800);
     stationaryTimeSeconds_ = 0;
     bitField0_ = (bitField0_ & ~0x00001000);
     assistanceType_ = AccidentAnalysisClassificationAssistanceTypeProto.AccidentAnalysisClassificationAssistanceType.ACCIDENT_ANALYSIS_CLASSIFICATION_ASSISTANCE_NOTHING;
     bitField0_ = (bitField0_ & ~0x00002000);
     return this;
   }

   public Builder clone() {
     return create().mergeFrom(buildPartial());
   }

   public com.google.protobuf.Descriptors.Descriptor
       getDescriptorForType() {
     return AccidentAnalysisClassificationEventProto.internal_static_AccidentAnalysisClassificationEvent_descriptor;
   }

   public AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent getDefaultInstanceForType() {
     return AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent.getDefaultInstance();
   }

   public AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent build() {
     AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent result = buildPartial();
     if (!result.isInitialized()) {
       throw newUninitializedMessageException(result);
     }
     return result;
   }

   public AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent buildPartial() {
     AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent result = new AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent(this);
     int from_bitField0_ = bitField0_;
     int to_bitField0_ = 0;
     if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
       to_bitField0_ |= 0x00000001;
     }
     if (headerBuilder_ == null) {
       result.header_ = header_;
     } else {
       result.header_ = headerBuilder_.build();
     }
     if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
       to_bitField0_ |= 0x00000002;
     }
     result.currentAccelerometerX_ = currentAccelerometerX_;
     if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
       to_bitField0_ |= 0x00000004;
     }
     result.currentAccelerometerY_ = currentAccelerometerY_;
     if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
       to_bitField0_ |= 0x00000008;
     }
     result.currentAccelerometerZ_ = currentAccelerometerZ_;
     if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
       to_bitField0_ |= 0x00000010;
     }
     result.accidentClassificationNumber_ = accidentClassificationNumber_;
     if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
       to_bitField0_ |= 0x00000020;
     }
     result.totalNumberOfImpacts_ = totalNumberOfImpacts_;
     if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
       to_bitField0_ |= 0x00000040;
     }
     result.numberOfLowImpacts_ = numberOfLowImpacts_;
     if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
       to_bitField0_ |= 0x00000080;
     }
     result.numberOfHighImpacts_ = numberOfHighImpacts_;
     if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
       to_bitField0_ |= 0x00000100;
     }
     result.numberOfFrontalImpacts_ = numberOfFrontalImpacts_;
     if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
       to_bitField0_ |= 0x00000200;
     }
     result.numberOfRearImpacts_ = numberOfRearImpacts_;
     if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
       to_bitField0_ |= 0x00000400;
     }
     result.numberOfSideImpacts_ = numberOfSideImpacts_;
     if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
       to_bitField0_ |= 0x00000800;
     }
     result.numberOfCornerImpacts_ = numberOfCornerImpacts_;
     if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
       to_bitField0_ |= 0x00001000;
     }
     result.stationaryTimeSeconds_ = stationaryTimeSeconds_;
     if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
       to_bitField0_ |= 0x00002000;
     }
     result.assistanceType_ = assistanceType_;
     result.bitField0_ = to_bitField0_;
     onBuilt();
     return result;
   }

   public Builder mergeFrom(com.google.protobuf.Message other) {
     if (other instanceof AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent) {
       return mergeFrom((AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent)other);
     } else {
       super.mergeFrom(other);
       return this;
     }
   }

   public Builder mergeFrom(AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent other) {
     if (other == AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent.getDefaultInstance()) return this;
     if (other.hasHeader()) {
       mergeHeader(other.getHeader());
     }
     if (other.hasCurrentAccelerometerX()) {
       setCurrentAccelerometerX(other.getCurrentAccelerometerX());
     }
     if (other.hasCurrentAccelerometerY()) {
       setCurrentAccelerometerY(other.getCurrentAccelerometerY());
     }
     if (other.hasCurrentAccelerometerZ()) {
       setCurrentAccelerometerZ(other.getCurrentAccelerometerZ());
     }
     if (other.hasAccidentClassificationNumber()) {
       setAccidentClassificationNumber(other.getAccidentClassificationNumber());
     }
     if (other.hasTotalNumberOfImpacts()) {
       setTotalNumberOfImpacts(other.getTotalNumberOfImpacts());
     }
     if (other.hasNumberOfLowImpacts()) {
       setNumberOfLowImpacts(other.getNumberOfLowImpacts());
     }
     if (other.hasNumberOfHighImpacts()) {
       setNumberOfHighImpacts(other.getNumberOfHighImpacts());
     }
     if (other.hasNumberOfFrontalImpacts()) {
       setNumberOfFrontalImpacts(other.getNumberOfFrontalImpacts());
     }
     if (other.hasNumberOfRearImpacts()) {
       setNumberOfRearImpacts(other.getNumberOfRearImpacts());
     }
     if (other.hasNumberOfSideImpacts()) {
       setNumberOfSideImpacts(other.getNumberOfSideImpacts());
     }
     if (other.hasNumberOfCornerImpacts()) {
       setNumberOfCornerImpacts(other.getNumberOfCornerImpacts());
     }
     if (other.hasStationaryTimeSeconds()) {
       setStationaryTimeSeconds(other.getStationaryTimeSeconds());
     }
     if (other.hasAssistanceType()) {
       setAssistanceType(other.getAssistanceType());
     }
     this.mergeUnknownFields(other.getUnknownFields());
     return this;
   }

   public final boolean isInitialized() {
     if (!hasHeader()) {
       
       return false;
     }
     if (!getHeader().isInitialized()) {
       
       return false;
     }
     return true;
   }

   public Builder mergeFrom(
       com.google.protobuf.CodedInputStream input,
       com.google.protobuf.ExtensionRegistryLite extensionRegistry)
       throws java.io.IOException {
     AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent parsedMessage = null;
     try {
       parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
     } catch (com.google.protobuf.InvalidProtocolBufferException e) {
       parsedMessage = (AccidentAnalysisClassificationEventProto.AccidentAnalysisClassificationEvent) e.getUnfinishedMessage();
       throw e;
     } finally {
       if (parsedMessage != null) {
         mergeFrom(parsedMessage);
       }
     }
     return this;
   }
   private int bitField0_;

   private EventHeaderProto.EventHeader header_ = EventHeaderProto.EventHeader.getDefaultInstance();
   private com.google.protobuf.SingleFieldBuilder<
       EventHeaderProto.EventHeader, EventHeaderProto.EventHeader.Builder, EventHeaderProto.EventHeaderOrBuilder> headerBuilder_;
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public boolean hasHeader() {
     return ((bitField0_ & 0x00000001) == 0x00000001);
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public EventHeaderProto.EventHeader getHeader() {
     if (headerBuilder_ == null) {
       return header_;
     } else {
       return headerBuilder_.getMessage();
     }
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder setHeader(EventHeaderProto.EventHeader value) {
     if (headerBuilder_ == null) {
       if (value == null) {
         throw new NullPointerException();
       }
       header_ = value;
       onChanged();
     } else {
       headerBuilder_.setMessage(value);
     }
     bitField0_ |= 0x00000001;
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder setHeader(
       EventHeaderProto.EventHeader.Builder builderForValue) {
     if (headerBuilder_ == null) {
       header_ = builderForValue.build();
       onChanged();
     } else {
       headerBuilder_.setMessage(builderForValue.build());
     }
     bitField0_ |= 0x00000001;
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder mergeHeader(EventHeaderProto.EventHeader value) {
     if (headerBuilder_ == null) {
       if (((bitField0_ & 0x00000001) == 0x00000001) &&
           header_ != EventHeaderProto.EventHeader.getDefaultInstance()) {
         header_ =
           EventHeaderProto.EventHeader.newBuilder(header_).mergeFrom(value).buildPartial();
       } else {
         header_ = value;
       }
       onChanged();
     } else {
       headerBuilder_.mergeFrom(value);
     }
     bitField0_ |= 0x00000001;
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public Builder clearHeader() {
     if (headerBuilder_ == null) {
       header_ = EventHeaderProto.EventHeader.getDefaultInstance();
       onChanged();
     } else {
       headerBuilder_.clear();
     }
     bitField0_ = (bitField0_ & ~0x00000001);
     return this;
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public EventHeaderProto.EventHeader.Builder getHeaderBuilder() {
     bitField0_ |= 0x00000001;
     onChanged();
     return getHeaderFieldBuilder().getBuilder();
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   public EventHeaderProto.EventHeaderOrBuilder getHeaderOrBuilder() {
     if (headerBuilder_ != null) {
       return headerBuilder_.getMessageOrBuilder();
     } else {
       return header_;
     }
   }
   /**
    * <code>required .EventHeader header = 1;</code>
    */
   private com.google.protobuf.SingleFieldBuilder<
       EventHeaderProto.EventHeader, EventHeaderProto.EventHeader.Builder, EventHeaderProto.EventHeaderOrBuilder> 
       getHeaderFieldBuilder() {
     if (headerBuilder_ == null) {
       headerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
           EventHeaderProto.EventHeader, EventHeaderProto.EventHeader.Builder, EventHeaderProto.EventHeaderOrBuilder>(
               getHeader(),
               getParentForChildren(),
               isClean());
       header_ = null;
     }
     return headerBuilder_;
   }

   private float currentAccelerometerX_ ;
   /**
    * <code>optional float current_accelerometer_x = 2;</code>
    *
    * <pre>
    * Current accelerometer X-Axis
    * </pre>
    */
   public boolean hasCurrentAccelerometerX() {
     return ((bitField0_ & 0x00000002) == 0x00000002);
   }
   /**
    * <code>optional float current_accelerometer_x = 2;</code>
    *
    * <pre>
    * Current accelerometer X-Axis
    * </pre>
    */
   public float getCurrentAccelerometerX() {
     return currentAccelerometerX_;
   }
   /**
    * <code>optional float current_accelerometer_x = 2;</code>
    *
    * <pre>
    * Current accelerometer X-Axis
    * </pre>
    */
   public Builder setCurrentAccelerometerX(float value) {
     bitField0_ |= 0x00000002;
     currentAccelerometerX_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional float current_accelerometer_x = 2;</code>
    *
    * <pre>
    * Current accelerometer X-Axis
    * </pre>
    */
   public Builder clearCurrentAccelerometerX() {
     bitField0_ = (bitField0_ & ~0x00000002);
     currentAccelerometerX_ = 0F;
     onChanged();
     return this;
   }

   private float currentAccelerometerY_ ;
   /**
    * <code>optional float current_accelerometer_y = 3;</code>
    *
    * <pre>
    * Current accelerometer Y-Axis
    * </pre>
    */
   public boolean hasCurrentAccelerometerY() {
     return ((bitField0_ & 0x00000004) == 0x00000004);
   }
   /**
    * <code>optional float current_accelerometer_y = 3;</code>
    *
    * <pre>
    * Current accelerometer Y-Axis
    * </pre>
    */
   public float getCurrentAccelerometerY() {
     return currentAccelerometerY_;
   }
   /**
    * <code>optional float current_accelerometer_y = 3;</code>
    *
    * <pre>
    * Current accelerometer Y-Axis
    * </pre>
    */
   public Builder setCurrentAccelerometerY(float value) {
     bitField0_ |= 0x00000004;
     currentAccelerometerY_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional float current_accelerometer_y = 3;</code>
    *
    * <pre>
    * Current accelerometer Y-Axis
    * </pre>
    */
   public Builder clearCurrentAccelerometerY() {
     bitField0_ = (bitField0_ & ~0x00000004);
     currentAccelerometerY_ = 0F;
     onChanged();
     return this;
   }

   private float currentAccelerometerZ_ ;
   /**
    * <code>optional float current_accelerometer_z = 4;</code>
    *
    * <pre>
    * Current accelerometer Z-Axis
    * </pre>
    */
   public boolean hasCurrentAccelerometerZ() {
     return ((bitField0_ & 0x00000008) == 0x00000008);
   }
   /**
    * <code>optional float current_accelerometer_z = 4;</code>
    *
    * <pre>
    * Current accelerometer Z-Axis
    * </pre>
    */
   public float getCurrentAccelerometerZ() {
     return currentAccelerometerZ_;
   }
   /**
    * <code>optional float current_accelerometer_z = 4;</code>
    *
    * <pre>
    * Current accelerometer Z-Axis
    * </pre>
    */
   public Builder setCurrentAccelerometerZ(float value) {
     bitField0_ |= 0x00000008;
     currentAccelerometerZ_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional float current_accelerometer_z = 4;</code>
    *
    * <pre>
    * Current accelerometer Z-Axis
    * </pre>
    */
   public Builder clearCurrentAccelerometerZ() {
     bitField0_ = (bitField0_ & ~0x00000008);
     currentAccelerometerZ_ = 0F;
     onChanged();
     return this;
   }

   private int accidentClassificationNumber_ ;
   /**
    * <code>optional uint32 accident_classification_number = 5;</code>
    *
    * <pre>
    * Accident classification number
    * </pre>
    */
   public boolean hasAccidentClassificationNumber() {
     return ((bitField0_ & 0x00000010) == 0x00000010);
   }
   /**
    * <code>optional uint32 accident_classification_number = 5;</code>
    *
    * <pre>
    * Accident classification number
    * </pre>
    */
   public int getAccidentClassificationNumber() {
     return accidentClassificationNumber_;
   }
   /**
    * <code>optional uint32 accident_classification_number = 5;</code>
    *
    * <pre>
    * Accident classification number
    * </pre>
    */
   public Builder setAccidentClassificationNumber(int value) {
     bitField0_ |= 0x00000010;
     accidentClassificationNumber_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 accident_classification_number = 5;</code>
    *
    * <pre>
    * Accident classification number
    * </pre>
    */
   public Builder clearAccidentClassificationNumber() {
     bitField0_ = (bitField0_ & ~0x00000010);
     accidentClassificationNumber_ = 0;
     onChanged();
     return this;
   }

   private int totalNumberOfImpacts_ ;
   /**
    * <code>optional uint32 total_number_of_impacts = 6;</code>
    *
    * <pre>
    * Total number of impacts
    * </pre>
    */
   public boolean hasTotalNumberOfImpacts() {
     return ((bitField0_ & 0x00000020) == 0x00000020);
   }
   /**
    * <code>optional uint32 total_number_of_impacts = 6;</code>
    *
    * <pre>
    * Total number of impacts
    * </pre>
    */
   public int getTotalNumberOfImpacts() {
     return totalNumberOfImpacts_;
   }
   /**
    * <code>optional uint32 total_number_of_impacts = 6;</code>
    *
    * <pre>
    * Total number of impacts
    * </pre>
    */
   public Builder setTotalNumberOfImpacts(int value) {
     bitField0_ |= 0x00000020;
     totalNumberOfImpacts_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 total_number_of_impacts = 6;</code>
    *
    * <pre>
    * Total number of impacts
    * </pre>
    */
   public Builder clearTotalNumberOfImpacts() {
     bitField0_ = (bitField0_ & ~0x00000020);
     totalNumberOfImpacts_ = 0;
     onChanged();
     return this;
   }

   private int numberOfLowImpacts_ ;
   /**
    * <code>optional uint32 number_of_low_impacts = 7;</code>
    *
    * <pre>
    * Number of low impacts
    * </pre>
    */
   public boolean hasNumberOfLowImpacts() {
     return ((bitField0_ & 0x00000040) == 0x00000040);
   }
   /**
    * <code>optional uint32 number_of_low_impacts = 7;</code>
    *
    * <pre>
    * Number of low impacts
    * </pre>
    */
   public int getNumberOfLowImpacts() {
     return numberOfLowImpacts_;
   }
   /**
    * <code>optional uint32 number_of_low_impacts = 7;</code>
    *
    * <pre>
    * Number of low impacts
    * </pre>
    */
   public Builder setNumberOfLowImpacts(int value) {
     bitField0_ |= 0x00000040;
     numberOfLowImpacts_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 number_of_low_impacts = 7;</code>
    *
    * <pre>
    * Number of low impacts
    * </pre>
    */
   public Builder clearNumberOfLowImpacts() {
     bitField0_ = (bitField0_ & ~0x00000040);
     numberOfLowImpacts_ = 0;
     onChanged();
     return this;
   }

   private int numberOfHighImpacts_ ;
   /**
    * <code>optional uint32 number_of_high_impacts = 8;</code>
    *
    * <pre>
    * Number of high impacts
    * </pre>
    */
   public boolean hasNumberOfHighImpacts() {
     return ((bitField0_ & 0x00000080) == 0x00000080);
   }
   /**
    * <code>optional uint32 number_of_high_impacts = 8;</code>
    *
    * <pre>
    * Number of high impacts
    * </pre>
    */
   public int getNumberOfHighImpacts() {
     return numberOfHighImpacts_;
   }
   /**
    * <code>optional uint32 number_of_high_impacts = 8;</code>
    *
    * <pre>
    * Number of high impacts
    * </pre>
    */
   public Builder setNumberOfHighImpacts(int value) {
     bitField0_ |= 0x00000080;
     numberOfHighImpacts_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 number_of_high_impacts = 8;</code>
    *
    * <pre>
    * Number of high impacts
    * </pre>
    */
   public Builder clearNumberOfHighImpacts() {
     bitField0_ = (bitField0_ & ~0x00000080);
     numberOfHighImpacts_ = 0;
     onChanged();
     return this;
   }

   private int numberOfFrontalImpacts_ ;
   /**
    * <code>optional uint32 number_of_frontal_impacts = 9;</code>
    *
    * <pre>
    * Number of frontal impacts
    * </pre>
    */
   public boolean hasNumberOfFrontalImpacts() {
     return ((bitField0_ & 0x00000100) == 0x00000100);
   }
   /**
    * <code>optional uint32 number_of_frontal_impacts = 9;</code>
    *
    * <pre>
    * Number of frontal impacts
    * </pre>
    */
   public int getNumberOfFrontalImpacts() {
     return numberOfFrontalImpacts_;
   }
   /**
    * <code>optional uint32 number_of_frontal_impacts = 9;</code>
    *
    * <pre>
    * Number of frontal impacts
    * </pre>
    */
   public Builder setNumberOfFrontalImpacts(int value) {
     bitField0_ |= 0x00000100;
     numberOfFrontalImpacts_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 number_of_frontal_impacts = 9;</code>
    *
    * <pre>
    * Number of frontal impacts
    * </pre>
    */
   public Builder clearNumberOfFrontalImpacts() {
     bitField0_ = (bitField0_ & ~0x00000100);
     numberOfFrontalImpacts_ = 0;
     onChanged();
     return this;
   }

   private int numberOfRearImpacts_ ;
   /**
    * <code>optional uint32 number_of_rear_impacts = 10;</code>
    *
    * <pre>
    * Number of rear impacts
    * </pre>
    */
   public boolean hasNumberOfRearImpacts() {
     return ((bitField0_ & 0x00000200) == 0x00000200);
   }
   /**
    * <code>optional uint32 number_of_rear_impacts = 10;</code>
    *
    * <pre>
    * Number of rear impacts
    * </pre>
    */
   public int getNumberOfRearImpacts() {
     return numberOfRearImpacts_;
   }
   /**
    * <code>optional uint32 number_of_rear_impacts = 10;</code>
    *
    * <pre>
    * Number of rear impacts
    * </pre>
    */
   public Builder setNumberOfRearImpacts(int value) {
     bitField0_ |= 0x00000200;
     numberOfRearImpacts_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 number_of_rear_impacts = 10;</code>
    *
    * <pre>
    * Number of rear impacts
    * </pre>
    */
   public Builder clearNumberOfRearImpacts() {
     bitField0_ = (bitField0_ & ~0x00000200);
     numberOfRearImpacts_ = 0;
     onChanged();
     return this;
   }

   private int numberOfSideImpacts_ ;
   /**
    * <code>optional uint32 number_of_side_impacts = 11;</code>
    *
    * <pre>
    * Number of side impacts
    * </pre>
    */
   public boolean hasNumberOfSideImpacts() {
     return ((bitField0_ & 0x00000400) == 0x00000400);
   }
   /**
    * <code>optional uint32 number_of_side_impacts = 11;</code>
    *
    * <pre>
    * Number of side impacts
    * </pre>
    */
   public int getNumberOfSideImpacts() {
     return numberOfSideImpacts_;
   }
   /**
    * <code>optional uint32 number_of_side_impacts = 11;</code>
    *
    * <pre>
    * Number of side impacts
    * </pre>
    */
   public Builder setNumberOfSideImpacts(int value) {
     bitField0_ |= 0x00000400;
     numberOfSideImpacts_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 number_of_side_impacts = 11;</code>
    *
    * <pre>
    * Number of side impacts
    * </pre>
    */
   public Builder clearNumberOfSideImpacts() {
     bitField0_ = (bitField0_ & ~0x00000400);
     numberOfSideImpacts_ = 0;
     onChanged();
     return this;
   }

   private int numberOfCornerImpacts_ ;
   /**
    * <code>optional uint32 number_of_corner_impacts = 12;</code>
    *
    * <pre>
    * Number of corner impacts
    * </pre>
    */
   public boolean hasNumberOfCornerImpacts() {
     return ((bitField0_ & 0x00000800) == 0x00000800);
   }
   /**
    * <code>optional uint32 number_of_corner_impacts = 12;</code>
    *
    * <pre>
    * Number of corner impacts
    * </pre>
    */
   public int getNumberOfCornerImpacts() {
     return numberOfCornerImpacts_;
   }
   /**
    * <code>optional uint32 number_of_corner_impacts = 12;</code>
    *
    * <pre>
    * Number of corner impacts
    * </pre>
    */
   public Builder setNumberOfCornerImpacts(int value) {
     bitField0_ |= 0x00000800;
     numberOfCornerImpacts_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 number_of_corner_impacts = 12;</code>
    *
    * <pre>
    * Number of corner impacts
    * </pre>
    */
   public Builder clearNumberOfCornerImpacts() {
     bitField0_ = (bitField0_ & ~0x00000800);
     numberOfCornerImpacts_ = 0;
     onChanged();
     return this;
   }

   private int stationaryTimeSeconds_ ;
   /**
    * <code>optional uint32 stationary_time_seconds = 13;</code>
    *
    * <pre>
    * Stationary time in seconds
    * </pre>
    */
   public boolean hasStationaryTimeSeconds() {
     return ((bitField0_ & 0x00001000) == 0x00001000);
   }
   /**
    * <code>optional uint32 stationary_time_seconds = 13;</code>
    *
    * <pre>
    * Stationary time in seconds
    * </pre>
    */
   public int getStationaryTimeSeconds() {
     return stationaryTimeSeconds_;
   }
   /**
    * <code>optional uint32 stationary_time_seconds = 13;</code>
    *
    * <pre>
    * Stationary time in seconds
    * </pre>
    */
   public Builder setStationaryTimeSeconds(int value) {
     bitField0_ |= 0x00001000;
     stationaryTimeSeconds_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional uint32 stationary_time_seconds = 13;</code>
    *
    * <pre>
    * Stationary time in seconds
    * </pre>
    */
   public Builder clearStationaryTimeSeconds() {
     bitField0_ = (bitField0_ & ~0x00001000);
     stationaryTimeSeconds_ = 0;
     onChanged();
     return this;
   }

   private AccidentAnalysisClassificationAssistanceTypeProto.AccidentAnalysisClassificationAssistanceType assistanceType_ = AccidentAnalysisClassificationAssistanceTypeProto.AccidentAnalysisClassificationAssistanceType.ACCIDENT_ANALYSIS_CLASSIFICATION_ASSISTANCE_NOTHING;
   /**
    * <code>optional .AccidentAnalysisClassificationAssistanceType AssistanceType = 14 [default = ACCIDENT_ANALYSIS_CLASSIFICATION_ASSISTANCE_NOTHING];</code>
    *
    * <pre>
    * Assistance type (0 - nothing, 1 - call, 2-ambulance)
    * </pre>
    */
   public boolean hasAssistanceType() {
     return ((bitField0_ & 0x00002000) == 0x00002000);
   }
   /**
    * <code>optional .AccidentAnalysisClassificationAssistanceType AssistanceType = 14 [default = ACCIDENT_ANALYSIS_CLASSIFICATION_ASSISTANCE_NOTHING];</code>
    *
    * <pre>
    * Assistance type (0 - nothing, 1 - call, 2-ambulance)
    * </pre>
    */
   public AccidentAnalysisClassificationAssistanceTypeProto.AccidentAnalysisClassificationAssistanceType getAssistanceType() {
     return assistanceType_;
   }
   /**
    * <code>optional .AccidentAnalysisClassificationAssistanceType AssistanceType = 14 [default = ACCIDENT_ANALYSIS_CLASSIFICATION_ASSISTANCE_NOTHING];</code>
    *
    * <pre>
    * Assistance type (0 - nothing, 1 - call, 2-ambulance)
    * </pre>
    */
   public Builder setAssistanceType(AccidentAnalysisClassificationAssistanceTypeProto.AccidentAnalysisClassificationAssistanceType value) {
     if (value == null) {
       throw new NullPointerException();
     }
     bitField0_ |= 0x00002000;
     assistanceType_ = value;
     onChanged();
     return this;
   }
   /**
    * <code>optional .AccidentAnalysisClassificationAssistanceType AssistanceType = 14 [default = ACCIDENT_ANALYSIS_CLASSIFICATION_ASSISTANCE_NOTHING];</code>
    *
    * <pre>
    * Assistance type (0 - nothing, 1 - call, 2-ambulance)
    * </pre>
    */
   public Builder clearAssistanceType() {
     bitField0_ = (bitField0_ & ~0x00002000);
     assistanceType_ = AccidentAnalysisClassificationAssistanceTypeProto.AccidentAnalysisClassificationAssistanceType.ACCIDENT_ANALYSIS_CLASSIFICATION_ASSISTANCE_NOTHING;
     onChanged();
     return this;
   }

   // @@protoc_insertion_point(builder_scope:AccidentAnalysisClassificationEvent)
 }

 static {
   defaultInstance = new AccidentAnalysisClassificationEvent(true);
   defaultInstance.initFields();
 }

 // @@protoc_insertion_point(class_scope:AccidentAnalysisClassificationEvent)
}

private static final com.google.protobuf.Descriptors.Descriptor
 internal_static_AccidentAnalysisClassificationEvent_descriptor;
private static
 com.google.protobuf.GeneratedMessage.FieldAccessorTable
   internal_static_AccidentAnalysisClassificationEvent_fieldAccessorTable;

public static com.google.protobuf.Descriptors.FileDescriptor
   getDescriptor() {
 return descriptor;
}
private static com.google.protobuf.Descriptors.FileDescriptor
   descriptor;
static {
 java.lang.String[] descriptorData = {
   "\n.AccidentAnalysisClassificationEventPro" +
   "to.proto\032\026EventHeaderProto.proto\032=Enums/" +
   "AccidentAnalysisClassificationAssistance" +
   "TypeProto.proto\"\320\004\n#AccidentAnalysisClas" +
   "sificationEvent\022\034\n\006header\030\001 \002(\0132\014.EventH" +
   "eader\022\037\n\027current_accelerometer_x\030\002 \001(\002\022\037" +
   "\n\027current_accelerometer_y\030\003 \001(\002\022\037\n\027curre" +
   "nt_accelerometer_z\030\004 \001(\002\022&\n\036accident_cla" +
   "ssification_number\030\005 \001(\r\022\037\n\027total_number" +
   "_of_impacts\030\006 \001(\r\022\035\n\025number_of_low_impac",
   "ts\030\007 \001(\r\022\036\n\026number_of_high_impacts\030\010 \001(\r" +
   "\022!\n\031number_of_frontal_impacts\030\t \001(\r\022\036\n\026n" +
   "umber_of_rear_impacts\030\n \001(\r\022\036\n\026number_of" +
   "_side_impacts\030\013 \001(\r\022 \n\030number_of_corner_" +
   "impacts\030\014 \001(\r\022\037\n\027stationary_time_seconds" +
   "\030\r \001(\r\022z\n\016AssistanceType\030\016 \001(\0162-.Acciden" +
   "tAnalysisClassificationAssistanceType:3A" +
   "CCIDENT_ANALYSIS_CLASSIFICATION_ASSISTAN" +
   "CE_NOTHING"
 };
 com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
     new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
       public com.google.protobuf.ExtensionRegistry assignDescriptors(
           com.google.protobuf.Descriptors.FileDescriptor root) {
         descriptor = root;
         return null;
       }
     };
 com.google.protobuf.Descriptors.FileDescriptor
   .internalBuildGeneratedFileFrom(descriptorData,
     new com.google.protobuf.Descriptors.FileDescriptor[] {
       EventHeaderProto.getDescriptor(),
       AccidentAnalysisClassificationAssistanceTypeProto.getDescriptor(),
     }, assigner);
 internal_static_AccidentAnalysisClassificationEvent_descriptor =
   getDescriptor().getMessageTypes().get(0);
 internal_static_AccidentAnalysisClassificationEvent_fieldAccessorTable = new
   com.google.protobuf.GeneratedMessage.FieldAccessorTable(
     internal_static_AccidentAnalysisClassificationEvent_descriptor,
     new java.lang.String[] { "Header", "CurrentAccelerometerX", "CurrentAccelerometerY", "CurrentAccelerometerZ", "AccidentClassificationNumber", "TotalNumberOfImpacts", "NumberOfLowImpacts", "NumberOfHighImpacts", "NumberOfFrontalImpacts", "NumberOfRearImpacts", "NumberOfSideImpacts", "NumberOfCornerImpacts", "StationaryTimeSeconds", "AssistanceType", });
 EventHeaderProto.getDescriptor();
 AccidentAnalysisClassificationAssistanceTypeProto.getDescriptor();
}

// @@protoc_insertion_point(outer_class_scope)
}
