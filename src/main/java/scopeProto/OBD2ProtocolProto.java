package scopeProto;

//Generated by the protocol buffer compiler.  DO NOT EDIT!
//source: OBD2ProtocolProto.proto

public final class OBD2ProtocolProto {
private OBD2ProtocolProto() {}
public static void registerAllExtensions(
   com.google.protobuf.ExtensionRegistry registry) {
}
/**
* Protobuf enum {@code OBD2Protocol}
*
* <pre>
* Signaling protocols for the OBD-II interface
* </pre>
*/
public enum OBD2Protocol
   implements com.google.protobuf.ProtocolMessageEnum {
 /**
  * <code>OBD2_PROTOCOL_NOT_SUPPORTED = 0;</code>
  */
 OBD2_PROTOCOL_NOT_SUPPORTED(0, 0),
 /**
  * <code>OBD2_PROTOCOL_ISO9141 = 1;</code>
  */
 OBD2_PROTOCOL_ISO9141(1, 1),
 /**
  * <code>OBD2_PROTOCOL_KWP2000SLOW = 2;</code>
  */
 OBD2_PROTOCOL_KWP2000SLOW(2, 2),
 /**
  * <code>OBD2_PROTOCOL_KWP2000FAST = 3;</code>
  */
 OBD2_PROTOCOL_KWP2000FAST(3, 3),
 /**
  * <code>OBD2_PROTOCOL_CAN = 4;</code>
  */
 OBD2_PROTOCOL_CAN(4, 4),
 /**
  * <code>OBD2_PROTOCOL_J1850VPW = 5;</code>
  */
 OBD2_PROTOCOL_J1850VPW(5, 5),
 /**
  * <code>OBD2_PROTOCOL_VAG = 6;</code>
  */
 OBD2_PROTOCOL_VAG(6, 6),
 /**
  * <code>OBD2_PROTOCOL_KWP2000VAG = 7;</code>
  */
 OBD2_PROTOCOL_KWP2000VAG(7, 7),
 /**
  * <code>OBD2_PROTOCOL_VAGTP20 = 8;</code>
  */
 OBD2_PROTOCOL_VAGTP20(8, 8),
 ;

 /**
  * <code>OBD2_PROTOCOL_NOT_SUPPORTED = 0;</code>
  */
 public static final int OBD2_PROTOCOL_NOT_SUPPORTED_VALUE = 0;
 /**
  * <code>OBD2_PROTOCOL_ISO9141 = 1;</code>
  */
 public static final int OBD2_PROTOCOL_ISO9141_VALUE = 1;
 /**
  * <code>OBD2_PROTOCOL_KWP2000SLOW = 2;</code>
  */
 public static final int OBD2_PROTOCOL_KWP2000SLOW_VALUE = 2;
 /**
  * <code>OBD2_PROTOCOL_KWP2000FAST = 3;</code>
  */
 public static final int OBD2_PROTOCOL_KWP2000FAST_VALUE = 3;
 /**
  * <code>OBD2_PROTOCOL_CAN = 4;</code>
  */
 public static final int OBD2_PROTOCOL_CAN_VALUE = 4;
 /**
  * <code>OBD2_PROTOCOL_J1850VPW = 5;</code>
  */
 public static final int OBD2_PROTOCOL_J1850VPW_VALUE = 5;
 /**
  * <code>OBD2_PROTOCOL_VAG = 6;</code>
  */
 public static final int OBD2_PROTOCOL_VAG_VALUE = 6;
 /**
  * <code>OBD2_PROTOCOL_KWP2000VAG = 7;</code>
  */
 public static final int OBD2_PROTOCOL_KWP2000VAG_VALUE = 7;
 /**
  * <code>OBD2_PROTOCOL_VAGTP20 = 8;</code>
  */
 public static final int OBD2_PROTOCOL_VAGTP20_VALUE = 8;


 public final int getNumber() { return value; }

 public static OBD2Protocol valueOf(int value) {
   switch (value) {
     case 0: return OBD2_PROTOCOL_NOT_SUPPORTED;
     case 1: return OBD2_PROTOCOL_ISO9141;
     case 2: return OBD2_PROTOCOL_KWP2000SLOW;
     case 3: return OBD2_PROTOCOL_KWP2000FAST;
     case 4: return OBD2_PROTOCOL_CAN;
     case 5: return OBD2_PROTOCOL_J1850VPW;
     case 6: return OBD2_PROTOCOL_VAG;
     case 7: return OBD2_PROTOCOL_KWP2000VAG;
     case 8: return OBD2_PROTOCOL_VAGTP20;
     default: return null;
   }
 }

 public static com.google.protobuf.Internal.EnumLiteMap<OBD2Protocol>
     internalGetValueMap() {
   return internalValueMap;
 }
 private static com.google.protobuf.Internal.EnumLiteMap<OBD2Protocol>
     internalValueMap =
       new com.google.protobuf.Internal.EnumLiteMap<OBD2Protocol>() {
         public OBD2Protocol findValueByNumber(int number) {
           return OBD2Protocol.valueOf(number);
         }
       };

 public final com.google.protobuf.Descriptors.EnumValueDescriptor
     getValueDescriptor() {
   return getDescriptor().getValues().get(index);
 }
 public final com.google.protobuf.Descriptors.EnumDescriptor
     getDescriptorForType() {
   return getDescriptor();
 }
 public static final com.google.protobuf.Descriptors.EnumDescriptor
     getDescriptor() {
   return OBD2ProtocolProto.getDescriptor().getEnumTypes().get(0);
 }

 private static final OBD2Protocol[] VALUES = values();

 public static OBD2Protocol valueOf(
     com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
   if (desc.getType() != getDescriptor()) {
     throw new java.lang.IllegalArgumentException(
       "EnumValueDescriptor is not for this type.");
   }
   return VALUES[desc.getIndex()];
 }

 private final int index;
 private final int value;

 private OBD2Protocol(int index, int value) {
   this.index = index;
   this.value = value;
 }

 // @@protoc_insertion_point(enum_scope:OBD2Protocol)
}


public static com.google.protobuf.Descriptors.FileDescriptor
   getDescriptor() {
 return descriptor;
}
private static com.google.protobuf.Descriptors.FileDescriptor
   descriptor;
static {
 java.lang.String[] descriptorData = {
   "\n\027OBD2ProtocolProto.proto*\213\002\n\014OBD2Protoc" +
   "ol\022\037\n\033OBD2_PROTOCOL_NOT_SUPPORTED\020\000\022\031\n\025O" +
   "BD2_PROTOCOL_ISO9141\020\001\022\035\n\031OBD2_PROTOCOL_" +
   "KWP2000SLOW\020\002\022\035\n\031OBD2_PROTOCOL_KWP2000FA" +
   "ST\020\003\022\025\n\021OBD2_PROTOCOL_CAN\020\004\022\032\n\026OBD2_PROT" +
   "OCOL_J1850VPW\020\005\022\025\n\021OBD2_PROTOCOL_VAG\020\006\022\034" +
   "\n\030OBD2_PROTOCOL_KWP2000VAG\020\007\022\031\n\025OBD2_PRO" +
   "TOCOL_VAGTP20\020\010"
 };
 com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
     new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
       public com.google.protobuf.ExtensionRegistry assignDescriptors(
           com.google.protobuf.Descriptors.FileDescriptor root) {
         descriptor = root;
         return null;
       }
     };
 com.google.protobuf.Descriptors.FileDescriptor
   .internalBuildGeneratedFileFrom(descriptorData,
     new com.google.protobuf.Descriptors.FileDescriptor[] {
     }, assigner);
}

// @@protoc_insertion_point(outer_class_scope)
}
